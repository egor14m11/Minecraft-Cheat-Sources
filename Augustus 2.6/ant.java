import com.google.gson.JsonSerializationContext;
import com.google.gson.JsonParseException;
import com.google.gson.JsonObject;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonElement;
import com.google.gson.JsonSerializer;
import com.google.gson.JsonDeserializer;
import java.lang.reflect.Type;
import com.google.gson.GsonBuilder;
import com.google.gson.Gson;

// 
// Decompiled by Procyon v0.5.36
// 

public class ant
{
    public final float a;
    public final float b;
    public final float c;
    public final float d;
    public final float e;
    public final float f;
    public final float g;
    public final float h;
    public final float i;
    public final float j;
    public final float k;
    public final float l;
    public final float m;
    public final float n;
    public final float o;
    public final float p;
    public final int q;
    public final boolean r;
    public final boolean s;
    public final int t;
    public final boolean u;
    public final boolean v;
    public final boolean w;
    public final boolean x;
    public final boolean y;
    public final boolean z;
    public final boolean A;
    public final int B;
    public final boolean C;
    public final int D;
    public final boolean E;
    public final int F;
    public final int G;
    public final int H;
    public final int I;
    public final int J;
    public final int K;
    public final int L;
    public final int M;
    public final int N;
    public final int O;
    public final int P;
    public final int Q;
    public final int R;
    public final int S;
    public final int T;
    public final int U;
    public final int V;
    public final int W;
    public final int X;
    public final int Y;
    public final int Z;
    public final int aa;
    public final int ab;
    public final int ac;
    public final int ad;
    public final int ae;
    public final int af;
    public final int ag;
    public final int ah;
    public final int ai;
    public final int aj;
    public final int ak;
    public final int al;
    public final int am;
    public final int an;
    public final int ao;
    public final int ap;
    public final int aq;
    public final int ar;
    public final int as;
    public final int at;
    public final int au;
    public final int av;
    public final int aw;
    public final int ax;
    public final int ay;
    public final int az;
    
    private ant(final a \u2603) {
        this.a = \u2603.b;
        this.b = \u2603.c;
        this.c = \u2603.d;
        this.d = \u2603.e;
        this.e = \u2603.f;
        this.f = \u2603.g;
        this.g = \u2603.h;
        this.h = \u2603.i;
        this.i = \u2603.j;
        this.j = \u2603.k;
        this.k = \u2603.l;
        this.l = \u2603.m;
        this.m = \u2603.n;
        this.n = \u2603.o;
        this.o = \u2603.p;
        this.p = \u2603.q;
        this.q = \u2603.r;
        this.r = \u2603.s;
        this.s = \u2603.t;
        this.t = \u2603.u;
        this.u = \u2603.v;
        this.v = \u2603.w;
        this.w = \u2603.x;
        this.x = \u2603.y;
        this.y = \u2603.z;
        this.z = \u2603.A;
        this.A = \u2603.B;
        this.B = \u2603.C;
        this.C = \u2603.D;
        this.D = \u2603.E;
        this.E = \u2603.F;
        this.F = \u2603.G;
        this.G = \u2603.H;
        this.H = \u2603.I;
        this.I = \u2603.J;
        this.J = \u2603.K;
        this.K = \u2603.L;
        this.L = \u2603.M;
        this.M = \u2603.N;
        this.N = \u2603.O;
        this.O = \u2603.P;
        this.P = \u2603.Q;
        this.Q = \u2603.R;
        this.R = \u2603.S;
        this.S = \u2603.T;
        this.T = \u2603.U;
        this.U = \u2603.V;
        this.V = \u2603.W;
        this.W = \u2603.X;
        this.X = \u2603.Y;
        this.Y = \u2603.Z;
        this.Z = \u2603.aa;
        this.aa = \u2603.ab;
        this.ab = \u2603.ac;
        this.ac = \u2603.ad;
        this.ad = \u2603.ae;
        this.ae = \u2603.af;
        this.af = \u2603.ag;
        this.ag = \u2603.ah;
        this.ah = \u2603.ai;
        this.ai = \u2603.aj;
        this.aj = \u2603.ak;
        this.ak = \u2603.al;
        this.al = \u2603.am;
        this.am = \u2603.an;
        this.an = \u2603.ao;
        this.ao = \u2603.ap;
        this.ap = \u2603.aq;
        this.aq = \u2603.ar;
        this.ar = \u2603.as;
        this.as = \u2603.at;
        this.at = \u2603.au;
        this.au = \u2603.av;
        this.av = \u2603.aw;
        this.aw = \u2603.ax;
        this.ax = \u2603.ay;
        this.ay = \u2603.az;
        this.az = \u2603.aA;
    }
    
    public static class a
    {
        static final Gson a;
        public float b;
        public float c;
        public float d;
        public float e;
        public float f;
        public float g;
        public float h;
        public float i;
        public float j;
        public float k;
        public float l;
        public float m;
        public float n;
        public float o;
        public float p;
        public float q;
        public int r;
        public boolean s;
        public boolean t;
        public int u;
        public boolean v;
        public boolean w;
        public boolean x;
        public boolean y;
        public boolean z;
        public boolean A;
        public boolean B;
        public int C;
        public boolean D;
        public int E;
        public boolean F;
        public int G;
        public int H;
        public int I;
        public int J;
        public int K;
        public int L;
        public int M;
        public int N;
        public int O;
        public int P;
        public int Q;
        public int R;
        public int S;
        public int T;
        public int U;
        public int V;
        public int W;
        public int X;
        public int Y;
        public int Z;
        public int aa;
        public int ab;
        public int ac;
        public int ad;
        public int ae;
        public int af;
        public int ag;
        public int ah;
        public int ai;
        public int aj;
        public int ak;
        public int al;
        public int am;
        public int an;
        public int ao;
        public int ap;
        public int aq;
        public int ar;
        public int as;
        public int at;
        public int au;
        public int av;
        public int aw;
        public int ax;
        public int ay;
        public int az;
        public int aA;
        
        public static a a(final String \u2603) {
            if (\u2603.length() == 0) {
                return new a();
            }
            try {
                return ant.a.a.fromJson(\u2603, a.class);
            }
            catch (Exception ex) {
                return new a();
            }
        }
        
        @Override
        public String toString() {
            return ant.a.a.toJson(this);
        }
        
        public a() {
            this.b = 684.412f;
            this.c = 684.412f;
            this.d = 512.0f;
            this.e = 512.0f;
            this.f = 200.0f;
            this.g = 200.0f;
            this.h = 0.5f;
            this.i = 80.0f;
            this.j = 160.0f;
            this.k = 80.0f;
            this.l = 8.5f;
            this.m = 12.0f;
            this.n = 1.0f;
            this.o = 0.0f;
            this.p = 1.0f;
            this.q = 0.0f;
            this.r = 63;
            this.s = true;
            this.t = true;
            this.u = 8;
            this.v = true;
            this.w = true;
            this.x = true;
            this.y = true;
            this.z = true;
            this.A = true;
            this.B = true;
            this.C = 4;
            this.D = true;
            this.E = 80;
            this.F = false;
            this.G = -1;
            this.H = 4;
            this.I = 4;
            this.J = 33;
            this.K = 10;
            this.L = 0;
            this.M = 256;
            this.N = 33;
            this.O = 8;
            this.P = 0;
            this.Q = 256;
            this.R = 33;
            this.S = 10;
            this.T = 0;
            this.U = 80;
            this.V = 33;
            this.W = 10;
            this.X = 0;
            this.Y = 80;
            this.Z = 33;
            this.aa = 10;
            this.ab = 0;
            this.ac = 80;
            this.ad = 17;
            this.ae = 20;
            this.af = 0;
            this.ag = 128;
            this.ah = 9;
            this.ai = 20;
            this.aj = 0;
            this.ak = 64;
            this.al = 9;
            this.am = 2;
            this.an = 0;
            this.ao = 32;
            this.ap = 8;
            this.aq = 8;
            this.ar = 0;
            this.as = 16;
            this.at = 8;
            this.au = 1;
            this.av = 0;
            this.aw = 16;
            this.ax = 7;
            this.ay = 1;
            this.az = 16;
            this.aA = 16;
            this.a();
        }
        
        public void a() {
            this.b = 684.412f;
            this.c = 684.412f;
            this.d = 512.0f;
            this.e = 512.0f;
            this.f = 200.0f;
            this.g = 200.0f;
            this.h = 0.5f;
            this.i = 80.0f;
            this.j = 160.0f;
            this.k = 80.0f;
            this.l = 8.5f;
            this.m = 12.0f;
            this.n = 1.0f;
            this.o = 0.0f;
            this.p = 1.0f;
            this.q = 0.0f;
            this.r = 63;
            this.s = true;
            this.t = true;
            this.u = 8;
            this.v = true;
            this.w = true;
            this.x = true;
            this.y = true;
            this.z = true;
            this.A = true;
            this.B = true;
            this.C = 4;
            this.D = true;
            this.E = 80;
            this.F = false;
            this.G = -1;
            this.H = 4;
            this.I = 4;
            this.J = 33;
            this.K = 10;
            this.L = 0;
            this.M = 256;
            this.N = 33;
            this.O = 8;
            this.P = 0;
            this.Q = 256;
            this.R = 33;
            this.S = 10;
            this.T = 0;
            this.U = 80;
            this.V = 33;
            this.W = 10;
            this.X = 0;
            this.Y = 80;
            this.Z = 33;
            this.aa = 10;
            this.ab = 0;
            this.ac = 80;
            this.ad = 17;
            this.ae = 20;
            this.af = 0;
            this.ag = 128;
            this.ah = 9;
            this.ai = 20;
            this.aj = 0;
            this.ak = 64;
            this.al = 9;
            this.am = 2;
            this.an = 0;
            this.ao = 32;
            this.ap = 8;
            this.aq = 8;
            this.ar = 0;
            this.as = 16;
            this.at = 8;
            this.au = 1;
            this.av = 0;
            this.aw = 16;
            this.ax = 7;
            this.ay = 1;
            this.az = 16;
            this.aA = 16;
        }
        
        @Override
        public boolean equals(final Object \u2603) {
            if (this == \u2603) {
                return true;
            }
            if (\u2603 == null || this.getClass() != \u2603.getClass()) {
                return false;
            }
            final a a = (a)\u2603;
            return this.aa == a.aa && this.ac == a.ac && this.ab == a.ab && this.Z == a.Z && Float.compare(a.l, this.l) == 0 && Float.compare(a.o, this.o) == 0 && Float.compare(a.n, this.n) == 0 && Float.compare(a.q, this.q) == 0 && Float.compare(a.p, this.p) == 0 && this.H == a.H && this.ae == a.ae && this.ag == a.ag && this.af == a.af && this.ad == a.ad && Float.compare(a.b, this.b) == 0 && Float.compare(a.h, this.h) == 0 && Float.compare(a.f, this.f) == 0 && Float.compare(a.g, this.g) == 0 && this.au == a.au && this.aw == a.aw && this.av == a.av && this.at == a.at && this.W == a.W && this.Y == a.Y && this.X == a.X && this.V == a.V && this.K == a.K && this.M == a.M && this.L == a.L && this.J == a.J && this.u == a.u && this.G == a.G && this.am == a.am && this.ao == a.ao && this.an == a.an && this.al == a.al && this.S == a.S && this.U == a.U && this.T == a.T && this.R == a.R && this.O == a.O && this.Q == a.Q && this.P == a.P && this.N == a.N && Float.compare(a.c, this.c) == 0 && this.ai == a.ai && this.ak == a.ak && this.aj == a.aj && this.ah == a.ah && this.az == a.az && this.ay == a.ay && this.ax == a.ax && this.aA == a.aA && this.E == a.E && Float.compare(a.e, this.e) == 0 && Float.compare(a.i, this.i) == 0 && Float.compare(a.j, this.j) == 0 && Float.compare(a.k, this.k) == 0 && this.aq == a.aq && this.as == a.as && this.ar == a.ar && this.ap == a.ap && this.I == a.I && this.r == a.r && Float.compare(a.m, this.m) == 0 && Float.compare(a.d, this.d) == 0 && this.s == a.s && this.t == a.t && this.D == a.D && this.F == a.F && this.x == a.x && this.A == a.A && this.v == a.v && this.y == a.y && this.z == a.z && this.w == a.w && this.B == a.B && this.C == a.C;
        }
        
        @Override
        public int hashCode() {
            int n = (this.b != 0.0f) ? Float.floatToIntBits(this.b) : 0;
            n = 31 * n + ((this.c != 0.0f) ? Float.floatToIntBits(this.c) : 0);
            n = 31 * n + ((this.d != 0.0f) ? Float.floatToIntBits(this.d) : 0);
            n = 31 * n + ((this.e != 0.0f) ? Float.floatToIntBits(this.e) : 0);
            n = 31 * n + ((this.f != 0.0f) ? Float.floatToIntBits(this.f) : 0);
            n = 31 * n + ((this.g != 0.0f) ? Float.floatToIntBits(this.g) : 0);
            n = 31 * n + ((this.h != 0.0f) ? Float.floatToIntBits(this.h) : 0);
            n = 31 * n + ((this.i != 0.0f) ? Float.floatToIntBits(this.i) : 0);
            n = 31 * n + ((this.j != 0.0f) ? Float.floatToIntBits(this.j) : 0);
            n = 31 * n + ((this.k != 0.0f) ? Float.floatToIntBits(this.k) : 0);
            n = 31 * n + ((this.l != 0.0f) ? Float.floatToIntBits(this.l) : 0);
            n = 31 * n + ((this.m != 0.0f) ? Float.floatToIntBits(this.m) : 0);
            n = 31 * n + ((this.n != 0.0f) ? Float.floatToIntBits(this.n) : 0);
            n = 31 * n + ((this.o != 0.0f) ? Float.floatToIntBits(this.o) : 0);
            n = 31 * n + ((this.p != 0.0f) ? Float.floatToIntBits(this.p) : 0);
            n = 31 * n + ((this.q != 0.0f) ? Float.floatToIntBits(this.q) : 0);
            n = 31 * n + this.r;
            n = 31 * n + (this.s ? 1 : 0);
            n = 31 * n + (this.t ? 1 : 0);
            n = 31 * n + this.u;
            n = 31 * n + (this.v ? 1 : 0);
            n = 31 * n + (this.w ? 1 : 0);
            n = 31 * n + (this.x ? 1 : 0);
            n = 31 * n + (this.y ? 1 : 0);
            n = 31 * n + (this.z ? 1 : 0);
            n = 31 * n + (this.A ? 1 : 0);
            n = 31 * n + (this.B ? 1 : 0);
            n = 31 * n + this.C;
            n = 31 * n + (this.D ? 1 : 0);
            n = 31 * n + this.E;
            n = 31 * n + (this.F ? 1 : 0);
            n = 31 * n + this.G;
            n = 31 * n + this.H;
            n = 31 * n + this.I;
            n = 31 * n + this.J;
            n = 31 * n + this.K;
            n = 31 * n + this.L;
            n = 31 * n + this.M;
            n = 31 * n + this.N;
            n = 31 * n + this.O;
            n = 31 * n + this.P;
            n = 31 * n + this.Q;
            n = 31 * n + this.R;
            n = 31 * n + this.S;
            n = 31 * n + this.T;
            n = 31 * n + this.U;
            n = 31 * n + this.V;
            n = 31 * n + this.W;
            n = 31 * n + this.X;
            n = 31 * n + this.Y;
            n = 31 * n + this.Z;
            n = 31 * n + this.aa;
            n = 31 * n + this.ab;
            n = 31 * n + this.ac;
            n = 31 * n + this.ad;
            n = 31 * n + this.ae;
            n = 31 * n + this.af;
            n = 31 * n + this.ag;
            n = 31 * n + this.ah;
            n = 31 * n + this.ai;
            n = 31 * n + this.aj;
            n = 31 * n + this.ak;
            n = 31 * n + this.al;
            n = 31 * n + this.am;
            n = 31 * n + this.an;
            n = 31 * n + this.ao;
            n = 31 * n + this.ap;
            n = 31 * n + this.aq;
            n = 31 * n + this.ar;
            n = 31 * n + this.as;
            n = 31 * n + this.at;
            n = 31 * n + this.au;
            n = 31 * n + this.av;
            n = 31 * n + this.aw;
            n = 31 * n + this.ax;
            n = 31 * n + this.ay;
            n = 31 * n + this.az;
            n = 31 * n + this.aA;
            return n;
        }
        
        public ant b() {
            return new ant(this, null);
        }
        
        static {
            a = new GsonBuilder().registerTypeAdapter(a.class, new b()).create();
        }
    }
    
    public static class b implements JsonDeserializer<a>, JsonSerializer<a>
    {
        public a a(final JsonElement \u2603, final Type \u2603, final JsonDeserializationContext \u2603) throws JsonParseException {
            final JsonObject asJsonObject = \u2603.getAsJsonObject();
            final a a = new a();
            try {
                a.b = ni.a(asJsonObject, "coordinateScale", a.b);
                a.c = ni.a(asJsonObject, "heightScale", a.c);
                a.e = ni.a(asJsonObject, "lowerLimitScale", a.e);
                a.d = ni.a(asJsonObject, "upperLimitScale", a.d);
                a.f = ni.a(asJsonObject, "depthNoiseScaleX", a.f);
                a.g = ni.a(asJsonObject, "depthNoiseScaleZ", a.g);
                a.h = ni.a(asJsonObject, "depthNoiseScaleExponent", a.h);
                a.i = ni.a(asJsonObject, "mainNoiseScaleX", a.i);
                a.j = ni.a(asJsonObject, "mainNoiseScaleY", a.j);
                a.k = ni.a(asJsonObject, "mainNoiseScaleZ", a.k);
                a.l = ni.a(asJsonObject, "baseSize", a.l);
                a.m = ni.a(asJsonObject, "stretchY", a.m);
                a.n = ni.a(asJsonObject, "biomeDepthWeight", a.n);
                a.o = ni.a(asJsonObject, "biomeDepthOffset", a.o);
                a.p = ni.a(asJsonObject, "biomeScaleWeight", a.p);
                a.q = ni.a(asJsonObject, "biomeScaleOffset", a.q);
                a.r = ni.a(asJsonObject, "seaLevel", a.r);
                a.s = ni.a(asJsonObject, "useCaves", a.s);
                a.t = ni.a(asJsonObject, "useDungeons", a.t);
                a.u = ni.a(asJsonObject, "dungeonChance", a.u);
                a.v = ni.a(asJsonObject, "useStrongholds", a.v);
                a.w = ni.a(asJsonObject, "useVillages", a.w);
                a.x = ni.a(asJsonObject, "useMineShafts", a.x);
                a.y = ni.a(asJsonObject, "useTemples", a.y);
                a.z = ni.a(asJsonObject, "useMonuments", a.z);
                a.A = ni.a(asJsonObject, "useRavines", a.A);
                a.B = ni.a(asJsonObject, "useWaterLakes", a.B);
                a.C = ni.a(asJsonObject, "waterLakeChance", a.C);
                a.D = ni.a(asJsonObject, "useLavaLakes", a.D);
                a.E = ni.a(asJsonObject, "lavaLakeChance", a.E);
                a.F = ni.a(asJsonObject, "useLavaOceans", a.F);
                a.G = ni.a(asJsonObject, "fixedBiome", a.G);
                if (a.G >= 38 || a.G < -1) {
                    a.G = -1;
                }
                else if (a.G >= ady.x.az) {
                    final a a2 = a;
                    a2.G += 2;
                }
                a.H = ni.a(asJsonObject, "biomeSize", a.H);
                a.I = ni.a(asJsonObject, "riverSize", a.I);
                a.J = ni.a(asJsonObject, "dirtSize", a.J);
                a.K = ni.a(asJsonObject, "dirtCount", a.K);
                a.L = ni.a(asJsonObject, "dirtMinHeight", a.L);
                a.M = ni.a(asJsonObject, "dirtMaxHeight", a.M);
                a.N = ni.a(asJsonObject, "gravelSize", a.N);
                a.O = ni.a(asJsonObject, "gravelCount", a.O);
                a.P = ni.a(asJsonObject, "gravelMinHeight", a.P);
                a.Q = ni.a(asJsonObject, "gravelMaxHeight", a.Q);
                a.R = ni.a(asJsonObject, "graniteSize", a.R);
                a.S = ni.a(asJsonObject, "graniteCount", a.S);
                a.T = ni.a(asJsonObject, "graniteMinHeight", a.T);
                a.U = ni.a(asJsonObject, "graniteMaxHeight", a.U);
                a.V = ni.a(asJsonObject, "dioriteSize", a.V);
                a.W = ni.a(asJsonObject, "dioriteCount", a.W);
                a.X = ni.a(asJsonObject, "dioriteMinHeight", a.X);
                a.Y = ni.a(asJsonObject, "dioriteMaxHeight", a.Y);
                a.Z = ni.a(asJsonObject, "andesiteSize", a.Z);
                a.aa = ni.a(asJsonObject, "andesiteCount", a.aa);
                a.ab = ni.a(asJsonObject, "andesiteMinHeight", a.ab);
                a.ac = ni.a(asJsonObject, "andesiteMaxHeight", a.ac);
                a.ad = ni.a(asJsonObject, "coalSize", a.ad);
                a.ae = ni.a(asJsonObject, "coalCount", a.ae);
                a.af = ni.a(asJsonObject, "coalMinHeight", a.af);
                a.ag = ni.a(asJsonObject, "coalMaxHeight", a.ag);
                a.ah = ni.a(asJsonObject, "ironSize", a.ah);
                a.ai = ni.a(asJsonObject, "ironCount", a.ai);
                a.aj = ni.a(asJsonObject, "ironMinHeight", a.aj);
                a.ak = ni.a(asJsonObject, "ironMaxHeight", a.ak);
                a.al = ni.a(asJsonObject, "goldSize", a.al);
                a.am = ni.a(asJsonObject, "goldCount", a.am);
                a.an = ni.a(asJsonObject, "goldMinHeight", a.an);
                a.ao = ni.a(asJsonObject, "goldMaxHeight", a.ao);
                a.ap = ni.a(asJsonObject, "redstoneSize", a.ap);
                a.aq = ni.a(asJsonObject, "redstoneCount", a.aq);
                a.ar = ni.a(asJsonObject, "redstoneMinHeight", a.ar);
                a.as = ni.a(asJsonObject, "redstoneMaxHeight", a.as);
                a.at = ni.a(asJsonObject, "diamondSize", a.at);
                a.au = ni.a(asJsonObject, "diamondCount", a.au);
                a.av = ni.a(asJsonObject, "diamondMinHeight", a.av);
                a.aw = ni.a(asJsonObject, "diamondMaxHeight", a.aw);
                a.ax = ni.a(asJsonObject, "lapisSize", a.ax);
                a.ay = ni.a(asJsonObject, "lapisCount", a.ay);
                a.az = ni.a(asJsonObject, "lapisCenterHeight", a.az);
                a.aA = ni.a(asJsonObject, "lapisSpread", a.aA);
            }
            catch (Exception ex) {}
            return a;
        }
        
        public JsonElement a(final a \u2603, final Type \u2603, final JsonSerializationContext \u2603) {
            final JsonObject jsonObject = new JsonObject();
            jsonObject.addProperty("coordinateScale", \u2603.b);
            jsonObject.addProperty("heightScale", \u2603.c);
            jsonObject.addProperty("lowerLimitScale", \u2603.e);
            jsonObject.addProperty("upperLimitScale", \u2603.d);
            jsonObject.addProperty("depthNoiseScaleX", \u2603.f);
            jsonObject.addProperty("depthNoiseScaleZ", \u2603.g);
            jsonObject.addProperty("depthNoiseScaleExponent", \u2603.h);
            jsonObject.addProperty("mainNoiseScaleX", \u2603.i);
            jsonObject.addProperty("mainNoiseScaleY", \u2603.j);
            jsonObject.addProperty("mainNoiseScaleZ", \u2603.k);
            jsonObject.addProperty("baseSize", \u2603.l);
            jsonObject.addProperty("stretchY", \u2603.m);
            jsonObject.addProperty("biomeDepthWeight", \u2603.n);
            jsonObject.addProperty("biomeDepthOffset", \u2603.o);
            jsonObject.addProperty("biomeScaleWeight", \u2603.p);
            jsonObject.addProperty("biomeScaleOffset", \u2603.q);
            jsonObject.addProperty("seaLevel", \u2603.r);
            jsonObject.addProperty("useCaves", \u2603.s);
            jsonObject.addProperty("useDungeons", \u2603.t);
            jsonObject.addProperty("dungeonChance", \u2603.u);
            jsonObject.addProperty("useStrongholds", \u2603.v);
            jsonObject.addProperty("useVillages", \u2603.w);
            jsonObject.addProperty("useMineShafts", \u2603.x);
            jsonObject.addProperty("useTemples", \u2603.y);
            jsonObject.addProperty("useMonuments", \u2603.z);
            jsonObject.addProperty("useRavines", \u2603.A);
            jsonObject.addProperty("useWaterLakes", \u2603.B);
            jsonObject.addProperty("waterLakeChance", \u2603.C);
            jsonObject.addProperty("useLavaLakes", \u2603.D);
            jsonObject.addProperty("lavaLakeChance", \u2603.E);
            jsonObject.addProperty("useLavaOceans", \u2603.F);
            jsonObject.addProperty("fixedBiome", \u2603.G);
            jsonObject.addProperty("biomeSize", \u2603.H);
            jsonObject.addProperty("riverSize", \u2603.I);
            jsonObject.addProperty("dirtSize", \u2603.J);
            jsonObject.addProperty("dirtCount", \u2603.K);
            jsonObject.addProperty("dirtMinHeight", \u2603.L);
            jsonObject.addProperty("dirtMaxHeight", \u2603.M);
            jsonObject.addProperty("gravelSize", \u2603.N);
            jsonObject.addProperty("gravelCount", \u2603.O);
            jsonObject.addProperty("gravelMinHeight", \u2603.P);
            jsonObject.addProperty("gravelMaxHeight", \u2603.Q);
            jsonObject.addProperty("graniteSize", \u2603.R);
            jsonObject.addProperty("graniteCount", \u2603.S);
            jsonObject.addProperty("graniteMinHeight", \u2603.T);
            jsonObject.addProperty("graniteMaxHeight", \u2603.U);
            jsonObject.addProperty("dioriteSize", \u2603.V);
            jsonObject.addProperty("dioriteCount", \u2603.W);
            jsonObject.addProperty("dioriteMinHeight", \u2603.X);
            jsonObject.addProperty("dioriteMaxHeight", \u2603.Y);
            jsonObject.addProperty("andesiteSize", \u2603.Z);
            jsonObject.addProperty("andesiteCount", \u2603.aa);
            jsonObject.addProperty("andesiteMinHeight", \u2603.ab);
            jsonObject.addProperty("andesiteMaxHeight", \u2603.ac);
            jsonObject.addProperty("coalSize", \u2603.ad);
            jsonObject.addProperty("coalCount", \u2603.ae);
            jsonObject.addProperty("coalMinHeight", \u2603.af);
            jsonObject.addProperty("coalMaxHeight", \u2603.ag);
            jsonObject.addProperty("ironSize", \u2603.ah);
            jsonObject.addProperty("ironCount", \u2603.ai);
            jsonObject.addProperty("ironMinHeight", \u2603.aj);
            jsonObject.addProperty("ironMaxHeight", \u2603.ak);
            jsonObject.addProperty("goldSize", \u2603.al);
            jsonObject.addProperty("goldCount", \u2603.am);
            jsonObject.addProperty("goldMinHeight", \u2603.an);
            jsonObject.addProperty("goldMaxHeight", \u2603.ao);
            jsonObject.addProperty("redstoneSize", \u2603.ap);
            jsonObject.addProperty("redstoneCount", \u2603.aq);
            jsonObject.addProperty("redstoneMinHeight", \u2603.ar);
            jsonObject.addProperty("redstoneMaxHeight", \u2603.as);
            jsonObject.addProperty("diamondSize", \u2603.at);
            jsonObject.addProperty("diamondCount", \u2603.au);
            jsonObject.addProperty("diamondMinHeight", \u2603.av);
            jsonObject.addProperty("diamondMaxHeight", \u2603.aw);
            jsonObject.addProperty("lapisSize", \u2603.ax);
            jsonObject.addProperty("lapisCount", \u2603.ay);
            jsonObject.addProperty("lapisCenterHeight", \u2603.az);
            jsonObject.addProperty("lapisSpread", \u2603.aA);
            return jsonObject;
        }
    }
}
