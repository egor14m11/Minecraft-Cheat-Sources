package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.verus

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C0FPacketConfirmTransaction

class OldVerusCombatDisabler : DisablerMode("OldVerusCombat") {
    private var currentTrans = 0
    override fun onEnable() {
        currentTrans = 0
    }
    override fun onWorld(event: WorldEvent) {
        currentTrans = 0
    }
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if (packet is C0FPacketConfirmTransaction) {
            if (currentTrans > 0) event.cancelEvent()
            currentTrans++
            disabler.debugMessage("Packet C0F (Trans=$currentTrans)")
        } else if (packet is C0BPacketEntityAction) {
            event.cancelEvent()
            disabler.debugMessage("Packet C0B")
        }

    }
}