package zamorozka.modules.EXPLOITS;

import java.util.ArrayList;
import java.util.Iterator;

import org.lwjgl.input.Mouse;

import de.Hero.settings.Setting;
import it.unimi.dsi.fastutil.floats.FloatPriorityQueue;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.SoundEvents;
import net.minecraft.network.play.client.CPacketUseEntity;
import net.minecraft.network.play.client.CPacketUseEntity.Action;
import net.minecraft.util.EnumHand;
import net.minecraft.util.SoundEvent;
import zamorozka.event.EventTarget;
import zamorozka.event.events.EventPacket;
import zamorozka.event.events.EventPreMotionUpdates;
import zamorozka.event.events.MouseAttackEvent;
import zamorozka.main.Zamorozka;
import zamorozka.module.Category;
import zamorozka.module.Module;
import zamorozka.ui.ChatUtils;
import zamorozka.ui.EntityUtil;
import zamorozka.ui.RotationUtils;
import zamorozka.ui.RotationsUtilis;

public class FakeHack extends Module {

	public static ArrayList<String> fakeHackers = new ArrayList<String>();

	private float yaw = 75;
	private float pitch = 0;

	private boolean rotate;

	@Override
	public void setup() {
		Zamorozka.settingsManager.rSetting(new Setting("FakeAttackDistance", this, 3, 1, 7, false));
		Zamorozka.settingsManager.rSetting(new Setting("FakeSneak", this, false));
	}

	public FakeHack() {
		super("FakeHack", 0, Category.Exploits);
	}

	@Override
	public void onDisable() {
		for (String name : fakeHackers) {
			if (Zamorozka.settingsManager.getSettingByName("FakeSneak").getValBoolean()) {
				EntityPlayer player = mc.world.getPlayerEntityByName(name);
				player.setSneaking(false);
			}
		}
		super.onDisable();
	}

	@Override
	public void onEnable() {
		for (int i = 0; i < 3; i++) {
			ChatUtils.printChatprefix("To use this function write - " + ".fakehack add (nick)");
		}
		fakeHackers.clear();
		super.onEnable();
	}

	@EventTarget
	public void onPre(EventPreMotionUpdates event) {
		for (String name : fakeHackers) {
			EntityPlayer player = mc.world.getPlayerEntityByName(name);
			if (player == null) {
				continue;
			}
			if (Zamorozka.settingsManager.getSettingByName("FakeSneak").getValBoolean()) {
				player.setSneaking(true);
			}
			// EntityLivingBase toFace = EntityUtil.getClosestEntityToEntity(25, player);
			float[] rots = EntityUtil.getFacePosEntityRemote(player, mc.player);
			float rc = (float) Zamorozka.settingsManager.getSettingByName("FakeAttackDistance").getValDouble();
			if (player.getDistanceToEntity(mc.player) <= rc) {
				player.rotationYaw = rots[0];
				player.rotationPitch = rots[1];
				player.rotationYawHead = rots[0];
				player.rotationPitchHead = rots[1];
				// player.renderYawOffset = rots[0];
				if (mc.player.ticksExisted % 4 == 0) {
					player.swingArm(EnumHand.MAIN_HAND);
					if (mc.player.getDistanceToEntity(player) <= rc) {
						Minecraft.player.playSound(SoundEvents.ENTITY_PLAYER_ATTACK_NODAMAGE, 1.0F, 1.0F);
					}
				}
			}
			if (mc.player.getDistanceToEntity(player) > rc && !Zamorozka.settingsManager.getSettingByName("FakeSneak").getValBoolean()) {
				player.rotationYaw = yaw;
				player.rotationPitch = pitch;
				player.rotationYawHead = yaw;
			}
		}
	}

	public static boolean isFakeHacker(EntityPlayer player) {
		for (String name : fakeHackers) {
			EntityPlayer en = mc.world.getPlayerEntityByName(name);
			if (en == null) {
				continue;
			}
			if (player.isEntityEqual(en)) {
				return true;
			}
		}
		return false;
	}

	public static void removeHacker(EntityPlayer en) {
		Iterator<String> iter = fakeHackers.iterator();

		while (iter.hasNext()) {
			String name = iter.next();
			if (mc.world.getPlayerEntityByName(name) == null) {
				continue;
			}
			if (en.isEntityEqual(mc.world.getPlayerEntityByName(name))) {
				mc.world.getPlayerEntityByName(name).setSneaking(false);
				iter.remove();
			}
		}
	}
}