package org.moonware.client.feature.impl.movement;

import net.minecraft.client.Minecraft;
import net.minecraft.init.Items;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.MathHelper;
import org.moonware.client.event.EventTarget;
import org.moonware.client.event.events.impl.packet.EventReceivePacket;
import org.moonware.client.event.events.impl.player.EventUpdate;
import org.moonware.client.feature.Feature;
import org.moonware.client.feature.impl.Type;
import org.moonware.client.feature.impl.movement.Move.InventoryHelper2;
import org.moonware.client.helpers.misc.TimerHelper;
import org.moonware.client.helpers.player.MovementHelper;
import org.moonware.client.settings.impl.NumberSetting;

public class MatrixExploitJumpFly extends Feature {
    public static TimerHelper flighthelper;
    public static TimerHelper flighthelper2 = new TimerHelper();
    private float speeds;
    public final NumberSetting speed = new NumberSetting("Speed", 0.2f, 0.01f, 0.3f, 0.01f, () -> true);
    public MatrixExploitJumpFly() {
        super("MatrixFly", "Полёт на новый матрикс ( нужны элитры, одетые на вас )", Type.Movement);
        this.addSettings(speed);
    }

    private boolean flag = false;
    private TimerHelper helper = new TimerHelper();
    @EventTarget
    public void onUpdate(EventUpdate event) {
        if (getState()) {
            InventoryHelper2.swapElytraToChestplate();
            if (MatrixExploitJumpFly.mc.player.ticksExisted % 9 == 0 && !Minecraft.player.onGround) {
                InventoryHelper2.disabler(InventoryHelper2.getSlotWithElytra());
                //InventoryHelper2.mc.player.connection.sendPacket(new CPacketEntityAction(InventoryHelper2.mc.player, CPacketEntityAction.Action.START_FALL_FLYING));

            }
            if (false) {

//                if (mc.player.onGround) {
//                    mc.player.motionY = 0.21f;
//                }
                if (!flighthelper2.hasReached(400)) {
                    //Minecraft.player.motionY= 0.21 / 2;
                }else {
                    //Minecraft.player.onGround = false;
                    MatrixExploitJumpFly.mc.player.motionY = 0;
                    MovementHelper.setMotion(MathHelper.clamp(MovementHelper.getSpeed() * 1.0f + this.speed.getNumberValue(),0,1.15)  );
                }


                if (MatrixExploitJumpFly.mc.player.ticksExisted % 5 == 0 && !MatrixExploitJumpFly.mc.player.onGround && true) {
                    //MatrixExploitJumpFly.mc.player.motionY -= 0.5;
                }
            }
            if (false) {
                MatrixExploitJumpFly.mc.player.motionY += 0.1;

                if (MatrixExploitJumpFly.mc.player.ticksExisted % 25 == 0 && !MatrixExploitJumpFly.mc.player.onGround) {
                    MatrixExploitJumpFly.mc.player.motionY -= 0.3f;
                }else{
                    MovementHelper.setMotion(MathHelper.clamp(MovementHelper.getSpeed() * 1.0f + this.speed.getNumberValue(),0,1.15)  );
                }
            }
            if (false) {
                MovementHelper.setMotion(MovementHelper.getSpeed() * 1.0f + this.speed.getNumberValue());
                if (MatrixExploitJumpFly.mc.player.onGround && !MatrixExploitJumpFly.mc.gameSettings.keyBindJump.pressed) {
                    MatrixExploitJumpFly.mc.player.jump();
                    MovementHelper.strafePlayer();
                }
            }
            int eIndex = -1;
            int elytraCount = 0;
            for (int i = 0; i < 45; ++i) {
                if (MatrixExploitJumpFly.mc.player.inventory.getStackInSlot(i).getItem() == Items.ELYTRA && eIndex == -1) {
                    eIndex = i;
                }
                if (MatrixExploitJumpFly.mc.player.inventory.getStackInSlot(i).getItem() != Items.ELYTRA) continue;
                ++elytraCount;
            }
            if (elytraCount == 0 && eIndex == -1 && MatrixExploitJumpFly.mc.player.getHeldItemOffhand().getItem() != Items.ELYTRA) {
                //MWUtils.sendChat("\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442\u0443 \u044d\u043b\u0438\u0442\u0440\u044b!");
                //this.toggle();
                flighthelper2.reset();
            }
        }else{
            flighthelper2.reset();
        }
    }

    @EventTarget
    public void EventUpdate(EventUpdate event) {
    }
    @EventTarget
    public void on(EventReceivePacket event) {
        if (event.getPacket() instanceof CPacketPlayer) {
            CPacketPlayer cPacketPlayer = (CPacketPlayer)event.getPacket();
            cPacketPlayer.onGround = false;
        }
//        if (event.getPacket() instanceof SPacketPlayerPosLook && Minecraft.player.ticksExisted % 7 == 0) {
//            flag= true;
//            Minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Minecraft.player.getPosition().getX(),Minecraft.player.getPosition().getY(),Minecraft.player.getPosition().getZ(),Minecraft.player.onGround));
//            Minecraft.player.connection.sendPacket(new CPacketPlayer.Position(-144,60,-144,false));
//            Minecraft.player.connection.sendPacket(new CPacketPlayer.Position(144,60,144,true));
//
//        }else{
//        }
//        if (event.getPacket() instanceof SPacketPlayerPosLook && Minecraft.player.ticksExisted % 4 == 0) {
//            Minecraft.player.connection.sendPacket(new CPacketPlayer.Position(Minecraft.player.getPosition().getX(),Minecraft.player.getPosition().getY(),Minecraft.player.getPosition().getZ(),Minecraft.player.onGround));
//            Minecraft.player.connection.sendPacket(new CPacketAnimation());
//            Minecraft.player.connection.sendPacket(new CPacketPlayer.Position(-144,60,-144,false));
//            mc.player.connection.sendPacket(new CPacketEntityAction(mc.player, CPacketEntityAction.Action.STOP_SPRINTING));
//        }else{
//        }
    }

    public void onDisable() {
        Minecraft.gameSettings.keyBindSneak.pressed = false;
        super.onDisable();
    }
}
