/*
 * Decompiled with CFR 0.150.
 */
package org.celestial.client.feature.impl.misc;

import java.util.ArrayList;
import net.minecraft.init.Blocks;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.tileentity.TileEntityBed;
import net.minecraft.util.math.BlockPos;
import org.celestial.client.event.EventTarget;
import org.celestial.client.event.events.impl.player.EventPreMotion;
import org.celestial.client.event.events.impl.player.EventUpdate;
import org.celestial.client.feature.Feature;
import org.celestial.client.feature.impl.Type;
import org.celestial.client.helpers.misc.ChatHelper;
import org.celestial.client.helpers.misc.TimerHelper;
import org.celestial.client.settings.impl.BooleanSetting;
import org.celestial.client.settings.impl.NumberSetting;

public class TeleportExploit
extends Feature {
    private final BooleanSetting motionYZero;
    private final BooleanSetting bedTeleport;
    private final NumberSetting motionReduce;
    private final ArrayList<TileEntity> entityList = new ArrayList();
    private final TimerHelper timerHelper = new TimerHelper();

    public TeleportExploit() {
        super("TeleportExploit", "\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u0430\u0440\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e \u043f\u0440\u0438 \u043d\u0430\u0436\u0430\u0442\u0438\u0438 \u043d\u0430 \u0448\u0438\u0444\u0442 \u0438\u043b\u0438 \u0432\u044b\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0438", Type.Movement);
        this.bedTeleport = new BooleanSetting("Bed Teleport", false, () -> true);
        this.motionReduce = new NumberSetting("Motion Reduce", 1.0f, 0.1f, 1.0f, 0.1f, () -> true);
        this.motionYZero = new BooleanSetting("Motion Y Zero", false, () -> true);
        this.addSettings(this.bedTeleport, this.motionYZero, this.motionReduce);
    }

    @Override
    public void onEnable() {
        int x = TeleportExploit.mc.player.getPosition().getX();
        int y = TeleportExploit.mc.player.getPosition().getY();
        int z = TeleportExploit.mc.player.getPosition().getZ();
        this.setSuffix("X: " + x + " Y: " + y + " Z: " + z);
        ChatHelper.addChatMessage("\u0422\u043e\u0447\u043a\u0430 \u0431\u044b\u043b\u0430 \u043f\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0430: X: " + x + " Y: " + y + " Z: " + z);
        ChatHelper.addChatMessage("\u0417\u0430\u0436\u043c\u0438\u0442\u0435 \u0448\u0438\u0444\u0442, \u0447\u0442\u043e \u0431\u044b \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0430\u0441 \u043d\u0430 \u0441\u0442\u0430\u0440\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e");
        super.onEnable();
    }

    @EventTarget
    public void onPreMotion(EventPreMotion event) {
        event.setOnGround(false);
        TeleportExploit.mc.player.motionX *= (double)this.motionReduce.getCurrentValue();
        TeleportExploit.mc.player.motionZ *= (double)this.motionReduce.getCurrentValue();
        if (this.motionYZero.getCurrentValue()) {
            TeleportExploit.mc.player.setSprinting(true);
            TeleportExploit.mc.player.motionY = TeleportExploit.mc.world.getBlockState(new BlockPos(TeleportExploit.mc.player).add(0.2, -1.0, -0.2)).getBlock() != Blocks.AIR ? (!TeleportExploit.mc.gameSettings.keyBindJump.isKeyDown() ? 0.0 : (TeleportExploit.mc.player.motionY -= 0.01)) : (TeleportExploit.mc.player.motionY -= 1.0);
        } else {
            TeleportExploit.mc.player.setSprinting(false);
        }
        if (!TeleportExploit.mc.player.isSneaking()) {
            return;
        }
        if (TeleportExploit.mc.player.ticksExisted % 5 == 0) {
            ChatHelper.addChatMessage("\u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u043c \u0432\u0430\u0441 \u043d\u0430 \u0441\u0442\u0430\u0440\u0443\u044e \u043f\u043e\u0437\u0438\u0446\u0438\u044e");
        }
        if (TeleportExploit.mc.player.onGround) {
            TeleportExploit.mc.player.jump();
        }
        if (this.timerHelper.hasReached(30.0)) {
            TeleportExploit.mc.player.connection.sendPacket(new CPacketPlayer.Position(TeleportExploit.mc.player.posX, 200.0, TeleportExploit.mc.player.posZ, true));
            this.timerHelper.reset();
        }
    }

    @EventTarget
    public void onUpdate(EventUpdate event) {
        if (this.bedTeleport.getCurrentValue()) {
            for (TileEntity entity : TeleportExploit.mc.world.loadedTileEntityList) {
                if (entity == null || !(entity instanceof TileEntityBed)) continue;
                if (TeleportExploit.mc.player.getDistanceToTileEntity(entity) < 20.0f) {
                    this.entityList.add(entity);
                }
                if (!TeleportExploit.mc.player.isSpectator() || this.entityList.contains(entity)) continue;
                TeleportExploit.mc.player.setPosition(entity.getPos().getX() - 2, entity.getPos().getY(), entity.getPos().getZ());
            }
        }
    }

    @Override
    public void onDisable() {
        TeleportExploit.mc.player.connection.sendPacket(new CPacketPlayer.Position(TeleportExploit.mc.player.posX, TeleportExploit.mc.player.posY + 5.0, TeleportExploit.mc.player.posZ, true));
        super.onDisable();
    }
}

