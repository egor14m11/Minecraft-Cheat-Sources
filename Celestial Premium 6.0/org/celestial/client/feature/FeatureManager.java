/*
 * Decompiled with CFR 0.150.
 */
package org.celestial.client.feature;

import java.util.List;
import java.util.concurrent.CopyOnWriteArrayList;
import org.celestial.client.feature.Feature;
import org.celestial.client.feature.impl.Type;
import org.celestial.client.feature.impl.combat.AimAssist;
import org.celestial.client.feature.impl.combat.AntiAim;
import org.celestial.client.feature.impl.combat.AntiBot;
import org.celestial.client.feature.impl.combat.AntiCrystal;
import org.celestial.client.feature.impl.combat.AntiProjectile;
import org.celestial.client.feature.impl.combat.AutoArmor;
import org.celestial.client.feature.impl.combat.AutoBow;
import org.celestial.client.feature.impl.combat.AutoBuff;
import org.celestial.client.feature.impl.combat.AutoGApple;
import org.celestial.client.feature.impl.combat.AutoPotion;
import org.celestial.client.feature.impl.combat.AutoShift;
import org.celestial.client.feature.impl.combat.AutoTotem;
import org.celestial.client.feature.impl.combat.CombatLeave;
import org.celestial.client.feature.impl.combat.Criticals;
import org.celestial.client.feature.impl.combat.FastBow;
import org.celestial.client.feature.impl.combat.HitBoxes;
import org.celestial.client.feature.impl.combat.HitParticles;
import org.celestial.client.feature.impl.combat.HitSounds;
import org.celestial.client.feature.impl.combat.KeepSprint;
import org.celestial.client.feature.impl.combat.KillAura;
import org.celestial.client.feature.impl.combat.NoDamageFriends;
import org.celestial.client.feature.impl.combat.PushAttack;
import org.celestial.client.feature.impl.combat.Reach;
import org.celestial.client.feature.impl.combat.SuperProjectile;
import org.celestial.client.feature.impl.combat.TargetStrafe;
import org.celestial.client.feature.impl.combat.TriggerBot;
import org.celestial.client.feature.impl.combat.Velocity;
import org.celestial.client.feature.impl.hud.ArrayList;
import org.celestial.client.feature.impl.hud.ClickGui;
import org.celestial.client.feature.impl.hud.ClientFont;
import org.celestial.client.feature.impl.hud.HUD;
import org.celestial.client.feature.impl.hud.Indicators;
import org.celestial.client.feature.impl.hud.InfoBoard;
import org.celestial.client.feature.impl.hud.InventoryPreview;
import org.celestial.client.feature.impl.hud.Notifications;
import org.celestial.client.feature.impl.misc.AntiBlocker;
import org.celestial.client.feature.impl.misc.AntiInvisible;
import org.celestial.client.feature.impl.misc.AutoFish;
import org.celestial.client.feature.impl.misc.AutoShearing;
import org.celestial.client.feature.impl.misc.Baritone;
import org.celestial.client.feature.impl.misc.BeaconRadius;
import org.celestial.client.feature.impl.misc.CPUStabilization;
import org.celestial.client.feature.impl.misc.ChatHistory;
import org.celestial.client.feature.impl.misc.ChunkAnimator;
import org.celestial.client.feature.impl.misc.ClientSounds;
import org.celestial.client.feature.impl.misc.CustomChat;
import org.celestial.client.feature.impl.misc.DeathCoordinates;
import org.celestial.client.feature.impl.misc.DeathSounds;
import org.celestial.client.feature.impl.misc.Disabler;
import org.celestial.client.feature.impl.misc.EntityFeatures;
import org.celestial.client.feature.impl.misc.FakeHack;
import org.celestial.client.feature.impl.misc.FastWorldLoading;
import org.celestial.client.feature.impl.misc.FlagDetector;
import org.celestial.client.feature.impl.misc.FreeCam;
import org.celestial.client.feature.impl.misc.Fucker;
import org.celestial.client.feature.impl.misc.GameCrasher;
import org.celestial.client.feature.impl.misc.GardenFeatures;
import org.celestial.client.feature.impl.misc.ItemScroller;
import org.celestial.client.feature.impl.misc.MCFriends;
import org.celestial.client.feature.impl.misc.NoArmSwing;
import org.celestial.client.feature.impl.misc.Nuker;
import org.celestial.client.feature.impl.misc.PortalGodMode;
import org.celestial.client.feature.impl.misc.Spammer;
import org.celestial.client.feature.impl.misc.StaffAlert;
import org.celestial.client.feature.impl.misc.StreamerMode;
import org.celestial.client.feature.impl.misc.TeleportExploit;
import org.celestial.client.feature.impl.movement.AntiLevitation;
import org.celestial.client.feature.impl.movement.AutoSprint;
import org.celestial.client.feature.impl.movement.BedrockClip;
import org.celestial.client.feature.impl.movement.CactusLeave;
import org.celestial.client.feature.impl.movement.ClickTP;
import org.celestial.client.feature.impl.movement.Clip;
import org.celestial.client.feature.impl.movement.ElytraFlight;
import org.celestial.client.feature.impl.movement.FastClimb;
import org.celestial.client.feature.impl.movement.Flight;
import org.celestial.client.feature.impl.movement.HighJump;
import org.celestial.client.feature.impl.movement.Jesus;
import org.celestial.client.feature.impl.movement.LongJump;
import org.celestial.client.feature.impl.movement.NoClip;
import org.celestial.client.feature.impl.movement.ParkourHelper;
import org.celestial.client.feature.impl.movement.Scaffold;
import org.celestial.client.feature.impl.movement.SelfDamage;
import org.celestial.client.feature.impl.movement.Speed;
import org.celestial.client.feature.impl.movement.Spider;
import org.celestial.client.feature.impl.movement.Step;
import org.celestial.client.feature.impl.movement.Timer;
import org.celestial.client.feature.impl.movement.WaterLeave;
import org.celestial.client.feature.impl.movement.WaterSpeed;
import org.celestial.client.feature.impl.movement.WebLeave;
import org.celestial.client.feature.impl.movement.WebTP;
import org.celestial.client.feature.impl.player.AntiAFK;
import org.celestial.client.feature.impl.player.AntiPush;
import org.celestial.client.feature.impl.player.AntiVoid;
import org.celestial.client.feature.impl.player.AutoAuth;
import org.celestial.client.feature.impl.player.AutoEat;
import org.celestial.client.feature.impl.player.AutoLeave;
import org.celestial.client.feature.impl.player.AutoRespawn;
import org.celestial.client.feature.impl.player.AutoTPAccept;
import org.celestial.client.feature.impl.player.AutoTool;
import org.celestial.client.feature.impl.player.ChestStealer;
import org.celestial.client.feature.impl.player.ClipHelper;
import org.celestial.client.feature.impl.player.FastUse;
import org.celestial.client.feature.impl.player.GuiWalk;
import org.celestial.client.feature.impl.player.HurtClip;
import org.celestial.client.feature.impl.player.InventoryManager;
import org.celestial.client.feature.impl.player.MiddleClickPearl;
import org.celestial.client.feature.impl.player.MultiAction;
import org.celestial.client.feature.impl.player.NoDelay;
import org.celestial.client.feature.impl.player.NoFall;
import org.celestial.client.feature.impl.player.NoInteract;
import org.celestial.client.feature.impl.player.NoServerRotations;
import org.celestial.client.feature.impl.player.NoSlowDown;
import org.celestial.client.feature.impl.player.NoWeb;
import org.celestial.client.feature.impl.player.PearlLogger;
import org.celestial.client.feature.impl.player.SafeWalk;
import org.celestial.client.feature.impl.player.SolidWeb;
import org.celestial.client.feature.impl.player.SpeedMine;
import org.celestial.client.feature.impl.player.XCarry;
import org.celestial.client.feature.impl.visuals.Ambience;
import org.celestial.client.feature.impl.visuals.BlockESP;
import org.celestial.client.feature.impl.visuals.Chams;
import org.celestial.client.feature.impl.visuals.ChinaHat;
import org.celestial.client.feature.impl.visuals.ContainerBlur;
import org.celestial.client.feature.impl.visuals.Crosshair;
import org.celestial.client.feature.impl.visuals.CustomModel;
import org.celestial.client.feature.impl.visuals.DamageMarkers;
import org.celestial.client.feature.impl.visuals.DeleteArmorStands;
import org.celestial.client.feature.impl.visuals.EnchantmentColor;
import org.celestial.client.feature.impl.visuals.EntityESP;
import org.celestial.client.feature.impl.visuals.FogColor;
import org.celestial.client.feature.impl.visuals.FullBright;
import org.celestial.client.feature.impl.visuals.HitColor;
import org.celestial.client.feature.impl.visuals.ItemPhysics;
import org.celestial.client.feature.impl.visuals.JumpCircles;
import org.celestial.client.feature.impl.visuals.NameTags;
import org.celestial.client.feature.impl.visuals.NightMode;
import org.celestial.client.feature.impl.visuals.NoPitchLimit;
import org.celestial.client.feature.impl.visuals.NoRender;
import org.celestial.client.feature.impl.visuals.PearlESP;
import org.celestial.client.feature.impl.visuals.PersonViewer;
import org.celestial.client.feature.impl.visuals.Radar;
import org.celestial.client.feature.impl.visuals.ShulkerViewer;
import org.celestial.client.feature.impl.visuals.SwingAnimations;
import org.celestial.client.feature.impl.visuals.Tracers;
import org.celestial.client.feature.impl.visuals.Trails;
import org.celestial.client.feature.impl.visuals.ViewModel;
import org.celestial.client.feature.impl.visuals.Weather;
import org.celestial.client.feature.impl.visuals.WorldColor;
import org.celestial.client.feature.impl.visuals.XRay;

public class FeatureManager {
    public CopyOnWriteArrayList<Feature> features = new CopyOnWriteArrayList();

    public FeatureManager() {
        this.features.add(new ClickGui());
        this.features.add(new HUD());
        this.features.add(new ArrayList());
        this.features.add(new ClientFont());
        this.features.add(new Notifications());
        this.features.add(new InfoBoard());
        this.features.add(new InventoryPreview());
        this.features.add(new FreeCam());
        this.features.add(new Disabler());
        this.features.add(new StreamerMode());
        this.features.add(new FakeHack());
        this.features.add(new FastWorldLoading());
        this.features.add(new ItemScroller());
        this.features.add(new Fucker());
        this.features.add(new XRay());
        this.features.add(new Nuker());
        this.features.add(new Spammer());
        this.features.add(new FlagDetector());
        this.features.add(new MCFriends());
        this.features.add(new DeathCoordinates());
        this.features.add(new AntiInvisible());
        this.features.add(new EntityFeatures());
        this.features.add(new Ambience());
        this.features.add(new GameCrasher());
        this.features.add(new Baritone());
        this.features.add(new ChunkAnimator());
        this.features.add(new ClientSounds());
        this.features.add(new DeathSounds());
        this.features.add(new DeleteArmorStands());
        this.features.add(new AutoShearing());
        this.features.add(new StaffAlert());
        this.features.add(new ShulkerViewer());
        this.features.add(new NoArmSwing());
        this.features.add(new CPUStabilization());
        this.features.add(new CustomChat());
        this.features.add(new ChatHistory());
        this.features.add(new PortalGodMode());
        this.features.add(new BeaconRadius());
        this.features.add(new KillAura());
        this.features.add(new AntiBot());
        this.features.add(new TargetStrafe());
        this.features.add(new TriggerBot());
        this.features.add(new AutoShift());
        this.features.add(new AutoTotem());
        this.features.add(new PushAttack());
        this.features.add(new AutoArmor());
        this.features.add(new AimAssist());
        this.features.add(new Velocity());
        this.features.add(new KeepSprint());
        this.features.add(new AntiAim());
        this.features.add(new AntiCrystal());
        this.features.add(new AutoPotion());
        this.features.add(new Criticals());
        this.features.add(new HitBoxes());
        this.features.add(new HitParticles());
        this.features.add(new AutoGApple());
        this.features.add(new NoDamageFriends());
        this.features.add(new Reach());
        this.features.add(new FastBow());
        this.features.add(new AntiProjectile());
        this.features.add(new AutoBow());
        this.features.add(new CombatLeave());
        this.features.add(new SuperProjectile());
        this.features.add(new HitSounds());
        this.features.add(new Scaffold());
        this.features.add(new AutoSprint());
        this.features.add(new FastClimb());
        this.features.add(new AntiLevitation());
        this.features.add(new Jesus());
        this.features.add(new WaterLeave());
        this.features.add(new LongJump());
        this.features.add(new Speed());
        this.features.add(new Timer());
        this.features.add(new Step());
        this.features.add(new Flight());
        this.features.add(new ElytraFlight());
        this.features.add(new Clip());
        this.features.add(new Spider());
        this.features.add(new HighJump());
        this.features.add(new WebTP());
        this.features.add(new TeleportExploit());
        this.features.add(new WaterSpeed());
        this.features.add(new ParkourHelper());
        this.features.add(new WebLeave());
        this.features.add(new BedrockClip());
        this.features.add(new SelfDamage());
        this.features.add(new CactusLeave());
        this.features.add(new ClickTP());
        this.features.add(new GuiWalk());
        this.features.add(new AutoRespawn());
        this.features.add(new AntiPush());
        this.features.add(new MiddleClickPearl());
        this.features.add(new NoClip());
        this.features.add(new NoDelay());
        this.features.add(new ChestStealer());
        this.features.add(new InventoryManager());
        this.features.add(new NoFall());
        this.features.add(new AntiVoid());
        this.features.add(new NoSlowDown());
        this.features.add(new NoServerRotations());
        this.features.add(new AntiAFK());
        this.features.add(new NoInteract());
        this.features.add(new GardenFeatures());
        this.features.add(new FastUse());
        this.features.add(new XCarry());
        this.features.add(new ClipHelper());
        this.features.add(new SafeWalk());
        this.features.add(new AutoFish());
        this.features.add(new AutoTool());
        this.features.add(new SpeedMine());
        this.features.add(new NoWeb());
        this.features.add(new AutoAuth());
        this.features.add(new SolidWeb());
        this.features.add(new PearlLogger());
        this.features.add(new HurtClip());
        this.features.add(new AutoLeave());
        this.features.add(new AutoEat());
        this.features.add(new AutoTPAccept());
        this.features.add(new MultiAction());
        this.features.add(new AutoBuff());
        this.features.add(new AntiBlocker());
        this.features.add(new EntityESP());
        this.features.add(new BlockESP());
        this.features.add(new NameTags());
        this.features.add(new FullBright());
        this.features.add(new SwingAnimations());
        this.features.add(new NoRender());
        this.features.add(new ViewModel());
        this.features.add(new ItemPhysics());
        this.features.add(new PersonViewer());
        this.features.add(new Chams());
        this.features.add(new FogColor());
        this.features.add(new Crosshair());
        this.features.add(new Radar());
        this.features.add(new Trails());
        this.features.add(new EnchantmentColor());
        this.features.add(new NoPitchLimit());
        this.features.add(new NightMode());
        this.features.add(new PearlESP());
        this.features.add(new Tracers());
        this.features.add(new HitColor());
        this.features.add(new ChinaHat());
        this.features.add(new DamageMarkers());
        this.features.add(new JumpCircles());
        this.features.add(new Indicators());
        this.features.add(new WorldColor());
        this.features.add(new Weather());
        this.features.add(new CustomModel());
        this.features.add(new ContainerBlur());
    }

    public List<Feature> getFeatureList() {
        return this.features;
    }

    public List<Feature> getFeaturesForCategory(Type category) {
        java.util.ArrayList<Feature> featureList = new java.util.ArrayList<Feature>();
        for (Feature feature : this.getFeatureList()) {
            if (feature.getType() != category) continue;
            featureList.add(feature);
        }
        return featureList;
    }

    public Feature getFeatureByClass(Class<? extends Feature> classModule) {
        for (Feature feature : this.getFeatureList()) {
            if (feature == null || feature.getClass() != classModule) continue;
            return feature;
        }
        return null;
    }

    public Feature getFeatureByLabel(String name) {
        for (Feature feature : this.getFeatureList()) {
            if (!feature.getLabel().equalsIgnoreCase(name)) continue;
            return feature;
        }
        return null;
    }
}

