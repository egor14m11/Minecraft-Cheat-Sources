/*
 * Decompiled with CFR 0.150.
 */
package net.minecraft.client.model;

import java.awt.Color;
import net.minecraft.client.Minecraft;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelBox;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.EnumHandSide;
import net.minecraft.util.math.MathHelper;
import org.celestial.client.Celestial;
import org.celestial.client.feature.impl.visuals.CustomModel;
import org.celestial.client.helpers.misc.ClientHelper;
import org.celestial.client.helpers.palette.PaletteHelper;
import org.celestial.client.helpers.render.RenderHelper;

public class ModelPlayer
extends ModelBiped {
    public ModelRenderer bipedLeftArmwear;
    public ModelRenderer bipedRightArmwear;
    public ModelRenderer bipedLeftLegwear;
    public ModelRenderer bipedRightLegwear;
    public ModelRenderer bipedBodyWear;
    private final ModelRenderer bipedCape;
    private final ModelRenderer bipedDeadmau5Head;
    private final boolean smallArms;
    private final ModelRenderer body;
    private ModelRenderer eye;
    private final ModelRenderer left_leg;
    private final ModelRenderer right_leg;
    private final ModelRenderer RightLeg;
    private final ModelRenderer LeftLeg;
    private final ModelRenderer Body;
    private final ModelRenderer RightArm;
    private final ModelRenderer Head;
    private final ModelRenderer LeftArm;
    private final ModelRenderer bone;
    private final ModelRenderer cube_r1;
    private final ModelRenderer cube_r2;
    private final ModelRenderer cube_r3;
    private final ModelRenderer cube_r4;
    private final ModelRenderer head7;
    private final ModelRenderer left_horn;
    private final ModelRenderer right_horn;
    private final ModelRenderer body7;
    private final ModelRenderer left_wing;
    private final ModelRenderer right_wing;
    private final ModelRenderer left_arm7;
    private final ModelRenderer right_arm7;
    private final ModelRenderer left_leg7;
    private final ModelRenderer left_leg1;
    private final ModelRenderer bone2;
    private final ModelRenderer bone3;
    private final ModelRenderer bone7;
    private final ModelRenderer right_leg7;
    private final ModelRenderer right_leg3;
    private final ModelRenderer bone4;
    private final ModelRenderer bone5;
    private final ModelRenderer bone6;
    ModelRenderer head;
    ModelRenderer nose;
    ModelRenderer ear1;
    ModelRenderer ear2;
    ModelRenderer bodyfront;
    ModelRenderer bodyback;
    ModelRenderer leg1;
    ModelRenderer foot1;
    ModelRenderer leg2;
    ModelRenderer foot2;
    ModelRenderer leg3;
    ModelRenderer foot3;
    ModelRenderer leg4;
    ModelRenderer foot4;
    ModelRenderer tail;
    ModelRenderer Back;
    ModelRenderer Nose;
    ModelRenderer RightEar;
    ModelRenderer RightWhiskers;
    ModelRenderer LeftEar;
    ModelRenderer UpperTail;
    ModelRenderer chinBody;
    ModelRenderer RightEye;
    ModelRenderer LowerTail;
    ModelRenderer RightRearFoot;
    ModelRenderer LeftRearFoot;
    ModelRenderer RightFrontLeg;
    ModelRenderer RightFrontFoot;
    ModelRenderer LeftFrontLeg;
    ModelRenderer LeftFrontFoot;
    ModelRenderer Chin;
    ModelRenderer LeftWhiskers;
    ModelRenderer chinHead;
    ModelRenderer LeftEye;
    public ModelRenderer fredbody;
    public ModelRenderer torso;
    public ModelRenderer armRight;
    public ModelRenderer crotch;
    public ModelRenderer legRight;
    public ModelRenderer legLeft;
    public ModelRenderer armLeft;
    public ModelRenderer fredhead;
    public ModelRenderer armRightpad;
    public ModelRenderer armRight2;
    public ModelRenderer armRightpad2;
    public ModelRenderer handRight;
    public ModelRenderer legRightpad;
    public ModelRenderer legRight2;
    public ModelRenderer legRightpad2;
    public ModelRenderer footRight;
    public ModelRenderer legLeftpad;
    public ModelRenderer legLeft2;
    public ModelRenderer legLeftpad2;
    public ModelRenderer footLeft;
    public ModelRenderer armLeftpad;
    public ModelRenderer armLeft2;
    public ModelRenderer armLeftpad2;
    public ModelRenderer handLeft;
    public ModelRenderer jaw;
    public ModelRenderer frednose;
    public ModelRenderer earRight;
    public ModelRenderer earLeft;
    public ModelRenderer hat;
    public ModelRenderer earRightpad;
    public ModelRenderer earRightpad_1;
    public ModelRenderer hat2;
    ModelRenderer Agarrador_2;
    ModelRenderer Agarrador_3;
    ModelRenderer Cuerpo;
    ModelRenderer Pie_3;
    ModelRenderer Agarrador_1;
    ModelRenderer Pantalon_1;
    ModelRenderer Cabeza;
    ModelRenderer Pierna_2;
    ModelRenderer Pitillo_1;
    ModelRenderer Pierna_1;
    ModelRenderer Pitillo_2;
    ModelRenderer Pie_1;
    ModelRenderer Pie_4;
    ModelRenderer Brazo_1;
    ModelRenderer Pie_2;
    ModelRenderer Pantalon_2;
    ModelRenderer Pantalon_3;
    ModelRenderer Brazo_2;
    ModelRenderer Brazo_3;
    ModelRenderer Brazo_4;
    ModelRenderer Guante_1;
    ModelRenderer Guante_2;
    ModelRenderer Mano_1;
    ModelRenderer Mano_2;
    private final ModelRenderer bb_main;
    private final ModelRenderer Rleg;
    private final ModelRenderer Lleg;
    private final ModelRenderer Larm;
    private final ModelRenderer Rarm;
    private final ModelRenderer sonicHead;
    private final ModelRenderer rabbitBone;
    private final ModelRenderer rabbitRleg;
    private final ModelRenderer rabbitLarm;
    private final ModelRenderer rabbitRarm;
    private final ModelRenderer rabbitLleg;
    private final ModelRenderer rabbitHead;

    public ModelPlayer(float modelSize, boolean smallArmsIn) {
        super(modelSize, 0.0f, 64, 64);
        this.smallArms = smallArmsIn;
        this.bipedDeadmau5Head = new ModelRenderer(this, 24, 0);
        this.bipedDeadmau5Head.addBox(-3.0f, -6.0f, -1.0f, 6, 6, 1, modelSize);
        this.bipedCape = new ModelRenderer(this, 0, 0);
        this.bipedCape.setTextureSize(64, 32);
        this.bipedCape.addBox(-5.0f, 0.0f, -1.0f, 10, 16, 1, modelSize);
        if (smallArmsIn) {
            this.bipedLeftArm = new ModelRenderer(this, 32, 48);
            this.bipedLeftArm.addBox(-1.0f, -2.0f, -2.0f, 3, 12, 4, modelSize);
            this.bipedLeftArm.setRotationPoint(5.0f, 2.5f, 0.0f);
            this.bipedRightArm = new ModelRenderer(this, 40, 16);
            this.bipedRightArm.addBox(-2.0f, -2.0f, -2.0f, 3, 12, 4, modelSize);
            this.bipedRightArm.setRotationPoint(-5.0f, 2.5f, 0.0f);
            this.bipedLeftArmwear = new ModelRenderer(this, 48, 48);
            this.bipedLeftArmwear.addBox(-1.0f, -2.0f, -2.0f, 3, 12, 4, modelSize + 0.25f);
            this.bipedLeftArmwear.setRotationPoint(5.0f, 2.5f, 0.0f);
            this.bipedRightArmwear = new ModelRenderer(this, 40, 32);
            this.bipedRightArmwear.addBox(-2.0f, -2.0f, -2.0f, 3, 12, 4, modelSize + 0.25f);
            this.bipedRightArmwear.setRotationPoint(-5.0f, 2.5f, 10.0f);
        } else {
            this.bipedLeftArm = new ModelRenderer(this, 32, 48);
            this.bipedLeftArm.addBox(-1.0f, -2.0f, -2.0f, 4, 12, 4, modelSize);
            this.bipedLeftArm.setRotationPoint(5.0f, 2.0f, 0.0f);
            this.bipedLeftArmwear = new ModelRenderer(this, 48, 48);
            this.bipedLeftArmwear.addBox(-1.0f, -2.0f, -2.0f, 4, 12, 4, modelSize + 0.25f);
            this.bipedLeftArmwear.setRotationPoint(5.0f, 2.0f, 0.0f);
            this.bipedRightArmwear = new ModelRenderer(this, 40, 32);
            this.bipedRightArmwear.addBox(-3.0f, -2.0f, -2.0f, 4, 12, 4, modelSize + 0.25f);
            this.bipedRightArmwear.setRotationPoint(-5.0f, 2.0f, 10.0f);
        }
        this.bipedLeftLeg = new ModelRenderer(this, 16, 48);
        this.bipedLeftLeg.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, modelSize);
        this.bipedLeftLeg.setRotationPoint(1.9f, 12.0f, 0.0f);
        this.bipedLeftLegwear = new ModelRenderer(this, 0, 48);
        this.bipedLeftLegwear.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, modelSize + 0.25f);
        this.bipedLeftLegwear.setRotationPoint(1.9f, 12.0f, 0.0f);
        this.bipedRightLegwear = new ModelRenderer(this, 0, 32);
        this.bipedRightLegwear.addBox(-2.0f, 0.0f, -2.0f, 4, 12, 4, modelSize + 0.25f);
        this.bipedRightLegwear.setRotationPoint(-1.9f, 12.0f, 0.0f);
        this.bipedBodyWear = new ModelRenderer(this, 16, 32);
        this.bipedBodyWear.addBox(-4.0f, 0.0f, -2.0f, 8, 12, 4, modelSize + 0.25f);
        this.bipedBodyWear.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.body = new ModelRenderer(this);
        this.body.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.body.setTextureOffset(34, 8).addBox(-4.0f, 6.0f, -3.0f, 8, 12, 6);
        this.body.setTextureOffset(15, 10).addBox(-3.0f, 9.0f, 3.0f, 6, 8, 3);
        this.body.setTextureOffset(26, 0).addBox(-3.0f, 5.0f, -3.0f, 6, 1, 6);
        this.eye = new ModelRenderer(this);
        this.eye.setTextureOffset(0, 10).addBox(-3.0f, 7.0f, -4.0f, 6, 4, 1);
        this.left_leg = new ModelRenderer(this);
        this.left_leg.setRotationPoint(-2.0f, 18.0f, 0.0f);
        this.left_leg.setTextureOffset(0, 0).addBox(2.9f, 0.0f, -1.5f, 3, 6, 3, 0.0f);
        this.right_leg = new ModelRenderer(this);
        this.right_leg.setRotationPoint(2.0f, 18.0f, 0.0f);
        this.right_leg.setTextureOffset(13, 0).addBox(-5.9f, 0.0f, -1.5f, 3, 6, 3);
        this.RightLeg = new ModelRenderer(this);
        this.RightLeg.setRotationPoint(-2.0f, 14.0f, 0.0f);
        this.RightLeg.cubeList.add(new ModelBox(this.RightLeg, 0, 36, -2.0f, 0.0f, -2.0f, 4, 10, 4, 0.0f, false));
        this.LeftLeg = new ModelRenderer(this);
        this.LeftLeg.setRotationPoint(2.0f, 14.0f, 0.0f);
        this.LeftLeg.cubeList.add(new ModelBox(this.LeftLeg, 24, 24, -2.0f, 0.0f, -2.0f, 4, 10, 4, 0.0f, false));
        this.Body = new ModelRenderer(this);
        this.Body.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.setRotationAngle(this.Body, 0.2618f, 0.0f, 0.0f);
        this.Body.cubeList.add(new ModelBox(this.Body, 0, 18, -4.0f, -23.1486f, 0.5266f, 8, 14, 4, 0.0f, false));
        this.RightArm = new ModelRenderer(this);
        this.RightArm.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.setRotationAngle(this.RightArm, -1.309f, 0.0f, 0.0f);
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 36, 0, -7.0f, -4.5f, -23.25f, 3, 12, 3, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 16, 36, -6.0f, 5.75f, -25.25f, 1, 2, 5, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 31, 15, -6.0f, 5.75f, -30.25f, 1, 2, 5, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 0, 0, -6.0f, 8.75f, -28.25f, 1, 1, 3, 0.0f, false));
        this.RightArm.cubeList.add(new ModelBox(this.RightArm, 24, 18, -6.0f, 7.75f, -29.25f, 1, 1, 5, 0.0f, false));
        this.Head = new ModelRenderer(this);
        this.Head.setRotationPoint(0.0f, 1.0f, -3.0f);
        this.Head.cubeList.add(new ModelBox(this.Head, 0, 0, -5.0f, -9.75f, -5.0f, 10, 10, 8, 0.0f, false));
        this.LeftArm = new ModelRenderer(this);
        this.LeftArm.setRotationPoint(4.0f, 3.0f, -3.0f);
        this.LeftArm.cubeList.add(new ModelBox(this.LeftArm, 37, 37, 0.0f, -1.75f, -1.5f, 3, 12, 3, 0.0f, false));
        this.bone = new ModelRenderer(this);
        this.bone.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.bone.setTextureOffset(0, 0).addCube(-8.0f, -12.0f, -6.0f, 16.0f, 7.0f, 12.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 0).addCube(7.0f, -8.0f, -13.0f, 2.0f, 3.0f, 7.0f, 0.0f, false);
        this.bone.setTextureOffset(40, 40).addCube(-9.0f, -8.0f, -13.0f, 2.0f, 3.0f, 7.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 27).addCube(-10.0f, -9.0f, -16.0f, 6.0f, 5.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(44, 19).addCube(4.0f, -9.0f, -16.0f, 6.0f, 5.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(32, 55).addCube(2.0f, -5.0f, -16.0f, 2.0f, 1.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(31, 19).addCube(-4.0f, -5.0f, -16.0f, 2.0f, 1.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(0, 41).addCube(-4.0f, -9.0f, -16.0f, 3.0f, 2.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(20, 39).addCube(1.0f, -9.0f, -16.0f, 3.0f, 2.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(0, 35).addCube(-6.0f, -8.0f, -9.0f, 3.0f, 3.0f, 3.0f, 0.0f, false);
        this.bone.setTextureOffset(22, 22).addCube(3.0f, -8.0f, -9.0f, 3.0f, 3.0f, 3.0f, 0.0f, false);
        this.cube_r1 = new ModelRenderer(this);
        this.cube_r1.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r1);
        this.setRotationAngle(this.cube_r1, 0.0f, 0.0f, 0.3491f);
        this.cube_r1.setTextureOffset(51, 39).addCube(-11.5f, -1.8f, 4.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(8, 51).addCube(-11.5f, -1.8f, 0.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(24, 55).addCube(-11.5f, -1.8f, -6.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(0, 35).addCube(-12.5f, -5.8f, -6.0f, 4.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r1.setTextureOffset(22, 23).addCube(3.3f, -13.6f, -6.0f, 5.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r2 = new ModelRenderer(this);
        this.cube_r2.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r2);
        this.setRotationAngle(this.cube_r2, 0.0f, 0.0f, -0.3491f);
        this.cube_r2.setTextureOffset(52, 52).addCube(9.5f, -1.8f, 4.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(16, 55).addCube(9.5f, -1.8f, 0.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(0, 51).addCube(9.5f, -1.8f, -6.0f, 2.0f, 6.0f, 2.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(20, 39).addCube(8.5f, -5.8f, -6.0f, 4.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r2.setTextureOffset(0, 19).addCube(-8.3f, -13.6f, -6.0f, 5.0f, 4.0f, 12.0f, 0.0f, false);
        this.cube_r3 = new ModelRenderer(this);
        this.cube_r3.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r3);
        this.setRotationAngle(this.cube_r3, 0.0f, 0.0f, 0.1309f);
        this.cube_r3.setTextureOffset(0, 0).addCube(1.3f, -18.0f, -6.7f, 3.0f, 6.0f, 3.0f, 0.0f, false);
        this.cube_r4 = new ModelRenderer(this);
        this.cube_r4.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.bone.addChild(this.cube_r4);
        this.setRotationAngle(this.cube_r4, 0.0f, 0.0f, -0.1309f);
        this.cube_r4.setTextureOffset(0, 19).addCube(-4.3f, -18.0f, -6.7f, 3.0f, 6.0f, 3.0f, 0.0f, false);
        this.head7 = new ModelRenderer(this);
        this.head7.setRotationPoint(0.0f, -6.0f, -1.0f);
        this.head7.setTextureOffset(0, 0).addCube(-4.0f, -4.0f, -3.0f, 8.0f, 8.0f, 8.0f, 0.3f, false);
        this.left_horn = new ModelRenderer(this);
        this.left_horn.setRotationPoint(-8.0f, 8.0f, 0.0f);
        this.head7.addChild(this.left_horn);
        this.setRotationAngle(this.left_horn, -0.3927f, 0.3927f, -0.5236f);
        this.left_horn.setTextureOffset(32, 8).addCube(13.4346f, -5.2071f, 2.7071f, 6.0f, 2.0f, 2.0f, 0.1f, false);
        this.left_horn.setTextureOffset(0, 0).addCube(17.4346f, -10.4071f, 2.7071f, 2.0f, 5.0f, 2.0f, 0.1f, false);
        this.right_horn = new ModelRenderer(this);
        this.right_horn.setRotationPoint(8.0f, 8.0f, 0.0f);
        this.head7.addChild(this.right_horn);
        this.setRotationAngle(this.right_horn, -0.3927f, -0.3927f, 0.5236f);
        this.right_horn.setTextureOffset(32, 8).addCube(-19.4346f, -5.2071f, 2.7071f, 6.0f, 2.0f, 2.0f, 0.1f, true);
        this.right_horn.setTextureOffset(0, 0).addCube(-19.4346f, -10.4071f, 2.7071f, 2.0f, 5.0f, 2.0f, 0.1f, true);
        this.body7 = new ModelRenderer(this);
        this.body7.setRotationPoint(0.5f, -0.1f, -3.5f);
        this.setRotationAngle(this.body7, 0.1745f, 0.0f, 0.0f);
        this.body7.setTextureOffset(0, 16).addCube(-4.5f, -1.7028f, 1.4696f, 8.0f, 12.0f, 4.0f, 0.0f, false);
        this.left_wing = new ModelRenderer(this);
        this.left_wing.setRotationPoint(8.25f, -2.0f, 10.0f);
        this.body7.addChild(this.left_wing);
        this.setRotationAngle(this.left_wing, 0.0873f, -0.829f, 0.1745f);
        this.left_wing.setTextureOffset(40, 12).addCube(-7.0072f, -0.5972f, 0.7515f, 12.0f, 13.0f, 0.0f, 0.0f, false);
        this.right_wing = new ModelRenderer(this);
        this.right_wing.setRotationPoint(-9.25f, -2.0f, 10.0f);
        this.body7.addChild(this.right_wing);
        this.setRotationAngle(this.right_wing, 0.0873f, 0.829f, -0.1745f);
        this.right_wing.setTextureOffset(40, 12).addCube(-4.9928f, -0.5972f, 0.7515f, 12.0f, 13.0f, 0.0f, 0.0f, true);
        this.left_arm7 = new ModelRenderer(this);
        this.left_arm7.setRotationPoint(5.4f, -1.25f, -2.0f);
        this.setRotationAngle(this.left_arm7, 0.0f, 0.0f, -0.2182f);
        this.left_arm7.setTextureOffset(24, 16).addCube(-1.1f, -1.05f, 0.0f, 4.0f, 14.0f, 4.0f, 0.0f, false);
        this.right_arm7 = new ModelRenderer(this);
        this.right_arm7.setRotationPoint(-5.4f, -1.25f, -2.0f);
        this.setRotationAngle(this.right_arm7, 0.0f, 0.0f, 0.2182f);
        this.right_arm7.setTextureOffset(24, 16).addCube(-2.9f, -1.05f, 0.0f, 4.0f, 14.0f, 4.0f, 0.0f, true);
        this.left_leg7 = new ModelRenderer(this);
        this.left_leg7.setRotationPoint(3.0f, 10.0f, 0.0f);
        this.left_leg7.setTextureOffset(48, 22).addCube(-3.25f, -2.25f, -1.0f, 4.0f, 9.0f, 4.0f, 0.0f, false);
        this.left_leg1 = new ModelRenderer(this);
        this.left_leg1.setRotationPoint(-1.7f, -0.1f, -3.55f);
        this.left_leg7.addChild(this.left_leg1);
        this.setRotationAngle(this.left_leg1, -0.5236f, 0.0f, 0.0f);
        this.left_leg1.setTextureOffset(34, 34).addCube(0.95f, 4.6f, 8.0511f, 3.0f, 5.0f, 3.0f, 0.0f, false);
        this.bone2 = new ModelRenderer(this);
        this.bone2.setRotationPoint(1.4f, 15.0f, 0.25f);
        this.left_leg1.addChild(this.bone2);
        this.setRotationAngle(this.bone2, 0.5236f, 0.0f, 0.0f);
        this.bone2.setTextureOffset(26, 0).addCube(-0.7f, -1.15f, 9.3f, 4.0f, 2.0f, 4.0f, 0.0f, false);
        this.bone2.setTextureOffset(40, 0).addCube(-0.7f, -1.15f, 7.3f, 4.0f, 2.0f, 2.0f, 0.0f, false);
        this.bone3 = new ModelRenderer(this);
        this.bone3.setRotationPoint(-1.0f, 0.0f, -2.0f);
        this.left_leg1.addChild(this.bone3);
        this.setRotationAngle(this.bone3, 0.0f, -0.0873f, -0.2618f);
        this.bone7 = new ModelRenderer(this);
        this.bone7.setRotationPoint(1.9f, 12.0f, 0.25f);
        this.bone3.addChild(this.bone7);
        this.bone7.setTextureOffset(16, 34).addCube(-0.7911f, -10.1159f, 8.0029f, 4.0f, 4.0f, 5.0f, 0.0f, false);
        this.bone7.setTextureOffset(0, 32).addCube(-0.7911f, -15.1159f, 4.0029f, 4.0f, 9.0f, 4.0f, 0.0f, false);
        this.right_leg7 = new ModelRenderer(this);
        this.right_leg7.setRotationPoint(-3.0f, 10.0f, 0.0f);
        this.right_leg7.setTextureOffset(48, 22).addCube(-0.75f, -2.25f, -1.0f, 4.0f, 9.0f, 4.0f, 0.0f, true);
        this.right_leg3 = new ModelRenderer(this);
        this.right_leg3.setRotationPoint(1.7f, -0.1f, -3.55f);
        this.right_leg7.addChild(this.right_leg3);
        this.setRotationAngle(this.right_leg3, -0.5236f, 0.0f, 0.0f);
        this.right_leg3.setTextureOffset(34, 34).addCube(-3.95f, 4.6f, 8.0511f, 3.0f, 5.0f, 3.0f, 0.0f, true);
        this.bone4 = new ModelRenderer(this);
        this.bone4.setRotationPoint(-1.4f, 15.0f, 0.25f);
        this.right_leg3.addChild(this.bone4);
        this.setRotationAngle(this.bone4, 0.5236f, 0.0f, 0.0f);
        this.bone4.setTextureOffset(26, 0).addCube(-3.3f, -1.15f, 9.3f, 4.0f, 2.0f, 4.0f, 0.0f, true);
        this.bone4.setTextureOffset(40, 0).addCube(-3.3f, -1.15f, 7.3f, 4.0f, 2.0f, 2.0f, 0.0f, true);
        this.bone5 = new ModelRenderer(this);
        this.bone5.setRotationPoint(1.0f, 0.0f, -2.0f);
        this.right_leg3.addChild(this.bone5);
        this.setRotationAngle(this.bone5, 0.0f, 0.0873f, 0.2618f);
        this.bone6 = new ModelRenderer(this);
        this.bone6.setRotationPoint(-1.9f, 12.0f, 0.25f);
        this.bone5.addChild(this.bone6);
        this.bone6.setTextureOffset(16, 34).addCube(-3.2089f, -10.1159f, 8.0029f, 4.0f, 4.0f, 5.0f, 0.0f, true);
        this.bone6.setTextureOffset(0, 32).addCube(-3.2089f, -15.1159f, 4.0029f, 4.0f, 9.0f, 4.0f, 0.0f, true);
        this.head = new ModelRenderer(this, 29, 5);
        this.head.addBox(-4.0f, -4.0f, -6.0f, 8, 7, 6);
        this.head.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.head.setTextureSize(64, 64);
        this.head.mirror = true;
        this.setRotationAngle(this.head, 0.0f, 0.0f, 0.0f);
        this.nose = new ModelRenderer(this, 45, 20);
        this.nose.addBox(-2.0f, -0.5f, -7.5f, 4, 3, 2);
        this.nose.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.nose.setTextureSize(64, 64);
        this.nose.mirror = true;
        this.setRotationAngle(this.nose, 0.0f, 0.0f, 0.0f);
        this.ear1 = new ModelRenderer(this, 45, 27);
        this.ear1.addBox(1.5f, -6.0f, -4.0f, 4, 4, 2);
        this.ear1.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.ear1.setTextureSize(64, 64);
        this.ear1.mirror = true;
        this.setRotationAngle(this.ear1, 0.0f, -0.1745329f, 0.0f);
        this.ear2 = new ModelRenderer(this, 45, 34);
        this.ear2.addBox(-5.5f, -6.0f, -4.0f, 4, 4, 2);
        this.ear2.setRotationPoint(0.0f, 14.0f, -5.0f);
        this.ear2.setTextureSize(64, 64);
        this.ear2.mirror = true;
        this.setRotationAngle(this.ear2, 0.0f, 0.1745329f, 0.0f);
        this.bodyfront = new ModelRenderer(this, 2, 45);
        this.bodyfront.addBox(0.0f, 0.0f, 0.0f, 9, 8, 9);
        this.bodyfront.setRotationPoint(-4.5f, 11.0f, -6.0f);
        this.bodyfront.setTextureSize(64, 64);
        this.bodyfront.mirror = true;
        this.setRotationAngle(this.bodyfront, 0.0872665f, 0.0f, 0.0f);
        this.bodyback = new ModelRenderer(this, 2, 26);
        this.bodyback.addBox(0.0f, 0.0f, 0.0f, 10, 8, 10);
        this.bodyback.setRotationPoint(-5.0f, 10.0f, 3.0f);
        this.bodyback.setTextureSize(64, 64);
        this.bodyback.mirror = true;
        this.setRotationAngle(this.bodyback, -0.0872665f, 0.0f, 0.0f);
        this.leg1 = new ModelRenderer(this, 44, 50);
        this.leg1.addBox(0.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg1.setRotationPoint(1.0f, 16.0f, -5.0f);
        this.leg1.setTextureSize(64, 64);
        this.leg1.mirror = true;
        this.setRotationAngle(this.leg1, 0.0f, 0.0f, 0.0f);
        this.foot1 = new ModelRenderer(this, 47, 43);
        this.foot1.addBox(0.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot1.setRotationPoint(1.0f, 16.0f, -5.0f);
        this.foot1.setTextureSize(64, 64);
        this.foot1.mirror = true;
        this.setRotationAngle(this.foot1, 0.0f, 0.0f, 0.0f);
        this.leg2 = new ModelRenderer(this, 44, 50);
        this.leg2.addBox(-4.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg2.setRotationPoint(-1.0f, 16.0f, -5.0f);
        this.leg2.setTextureSize(64, 64);
        this.leg2.mirror = true;
        this.setRotationAngle(this.leg2, 0.0f, 0.0f, 0.0f);
        this.foot2 = new ModelRenderer(this, 47, 43);
        this.foot2.addBox(-4.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot2.setRotationPoint(-1.0f, 16.0f, -5.0f);
        this.foot2.setTextureSize(64, 64);
        this.foot2.mirror = true;
        this.setRotationAngle(this.foot2, 0.0f, 0.0f, 0.0f);
        this.leg3 = new ModelRenderer(this, 44, 50);
        this.leg3.addBox(0.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg3.setRotationPoint(1.5f, 16.0f, 9.0f);
        this.leg3.setTextureSize(64, 64);
        this.leg3.mirror = true;
        this.setRotationAngle(this.leg3, 0.0f, 0.0f, 0.0f);
        this.foot3 = new ModelRenderer(this, 47, 43);
        this.foot3.addBox(0.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot3.setRotationPoint(1.5f, 16.0f, 9.0f);
        this.foot3.setTextureSize(64, 64);
        this.foot3.mirror = true;
        this.setRotationAngle(this.foot3, 0.0f, 0.0f, 0.0f);
        this.leg4 = new ModelRenderer(this, 44, 50);
        this.leg4.addBox(-4.0f, 0.0f, -2.0f, 4, 8, 4);
        this.leg4.setRotationPoint(-1.5f, 16.0f, 9.0f);
        this.leg4.setTextureSize(64, 64);
        this.leg4.mirror = true;
        this.setRotationAngle(this.leg4, 0.0f, 0.0f, 0.0f);
        this.foot4 = new ModelRenderer(this, 47, 43);
        this.foot4.addBox(-4.0f, 6.0f, -3.0f, 4, 2, 1);
        this.foot4.setRotationPoint(-1.5f, 16.0f, 9.0f);
        this.foot4.setTextureSize(64, 64);
        this.foot4.mirror = true;
        this.setRotationAngle(this.foot4, 0.0f, 0.0f, 0.0f);
        this.tail = new ModelRenderer(this, 2, 3);
        this.tail.addBox(-2.0f, -2.0f, 0.0f, 4, 5, 17);
        this.tail.setRotationPoint(0.0f, 14.0f, 11.0f);
        this.tail.setTextureSize(64, 64);
        this.tail.mirror = true;
        this.setRotationAngle(this.tail, -0.1745329f, 0.0f, 0.0f);
        this.textureWidth = 64;
        this.textureHeight = 32;
        this.Back = new ModelRenderer(this, 0, 14);
        this.Back.addBox(-3.0f, 0.3f, 3.3f, 6, 6, 3);
        this.Back.setRotationPoint(0.0f, 18.0f, -2.0f);
        this.Back.setTextureSize(64, 32);
        this.Back.mirror = true;
        this.setRotationAngle(this.Back, 0.2443461f, 0.0f, 0.0f);
        this.Nose = new ModelRenderer(this, 46, 24);
        this.Nose.addBox(-2.0f, -3.0f, -3.0f, 4, 4, 2);
        this.Nose.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.Nose.setTextureSize(64, 32);
        this.Nose.mirror = true;
        this.setRotationAngle(this.Nose, 0.3687912f, 0.0f, 0.0f);
        this.RightEar = new ModelRenderer(this, 48, 8);
        this.RightEar.addBox(0.5f, -6.0f, -0.6f, 1, 4, 3);
        this.RightEar.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightEar.setTextureSize(64, 32);
        this.RightEar.mirror = true;
        this.setRotationAngle(this.RightEar, 0.8726646f, 2.094395f, 0.0f);
        this.RightWhiskers = new ModelRenderer(this, 18, 19);
        this.RightWhiskers.addBox(-5.0f, -1.4f, -4.04f, 4, 3, 1);
        this.RightWhiskers.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightWhiskers.setTextureSize(64, 32);
        this.RightWhiskers.mirror = true;
        this.setRotationAngle(this.RightWhiskers, -0.0872665f, 0.1745329f, 0.0f);
        this.LeftEar = new ModelRenderer(this, 48, 0);
        this.LeftEar.addBox(0.5f, -6.0f, -2.4f, 1, 4, 3);
        this.LeftEar.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftEar.setTextureSize(64, 32);
        this.LeftEar.mirror = true;
        this.setRotationAngle(this.LeftEar, -0.8726646f, 1.047198f, 0.0f);
        this.UpperTail = new ModelRenderer(this, 14, 23);
        this.UpperTail.addBox(-1.5f, 1.5f, 2.6f, 3, 3, 4);
        this.UpperTail.setRotationPoint(0.0f, 22.2f, 4.066667f);
        this.UpperTail.setTextureSize(64, 32);
        this.UpperTail.mirror = true;
        this.setRotationAngle(this.UpperTail, 0.7330383f, 0.0f, 0.0f);
        this.chinBody = new ModelRenderer(this, 0, 0);
        this.chinBody.addBox(-3.5f, -2.0f, -1.0f, 7, 7, 7);
        this.chinBody.setRotationPoint(0.0f, 18.0f, -2.0f);
        this.chinBody.setTextureSize(64, 32);
        this.chinBody.mirror = true;
        this.setRotationAngle(this.chinBody, -0.0872665f, 0.0f, 0.0f);
        this.LowerTail = new ModelRenderer(this, 0, 23);
        this.LowerTail.addBox(-1.0f, -1.0f, 0.0f, 2, 2, 5);
        this.LowerTail.setRotationPoint(0.0f, 22.2f, 4.066667f);
        this.LowerTail.setTextureSize(64, 32);
        this.LowerTail.mirror = true;
        this.setRotationAngle(this.LowerTail, -0.1047198f, 0.0f, 0.0f);
        this.RightRearFoot = new ModelRenderer(this, 28, 9);
        this.RightRearFoot.addBox(-1.5f, 0.0f, -3.0f, 2, 1, 4);
        this.RightRearFoot.setRotationPoint(-3.0f, 23.0f, 3.0f);
        this.RightRearFoot.setTextureSize(64, 32);
        this.RightRearFoot.mirror = true;
        this.setRotationAngle(this.RightRearFoot, 0.0f, 0.0698132f, 0.0f);
        this.LeftRearFoot = new ModelRenderer(this, 28, 0);
        this.LeftRearFoot.addBox(-0.5f, 0.0f, -3.0f, 2, 1, 4);
        this.LeftRearFoot.setRotationPoint(3.0f, 23.0f, 3.0f);
        this.LeftRearFoot.setTextureSize(64, 32);
        this.LeftRearFoot.mirror = true;
        this.setRotationAngle(this.LeftRearFoot, 0.0f, -0.0698132f, 0.0f);
        this.RightFrontLeg = new ModelRenderer(this, 40, 9);
        this.RightFrontLeg.addBox(-1.0f, 0.0f, -1.0f, 2, 4, 2);
        this.RightFrontLeg.setRotationPoint(-3.0f, 20.0f, -3.0f);
        this.RightFrontLeg.setTextureSize(64, 32);
        this.RightFrontLeg.mirror = true;
        this.setRotationAngle(this.RightFrontLeg, -0.1858931f, 0.0f, 0.0f);
        this.RightFrontFoot = new ModelRenderer(this, 28, 14);
        this.RightFrontFoot.addBox(-1.0f, 3.0f, -2.8f, 2, 1, 3);
        this.RightFrontFoot.setRotationPoint(-3.0f, 20.0f, -3.0f);
        this.RightFrontFoot.setTextureSize(64, 32);
        this.RightFrontFoot.mirror = true;
        this.setRotationAngle(this.RightFrontFoot, 0.0f, -0.0698132f, 0.0f);
        this.LeftFrontLeg = new ModelRenderer(this, 40, 0);
        this.LeftFrontLeg.addBox(-1.0f, 0.0f, -1.0f, 2, 4, 2);
        this.LeftFrontLeg.setRotationPoint(3.0f, 20.0f, -3.0f);
        this.LeftFrontLeg.setTextureSize(64, 32);
        this.LeftFrontLeg.mirror = true;
        this.setRotationAngle(this.LeftFrontLeg, -0.1858931f, 0.0f, 0.0f);
        this.LeftFrontFoot = new ModelRenderer(this, 28, 5);
        this.LeftFrontFoot.addBox(-1.0f, 3.0f, -2.8f, 2, 1, 3);
        this.LeftFrontFoot.setRotationPoint(3.0f, 20.0f, -3.0f);
        this.LeftFrontFoot.setTextureSize(64, 32);
        this.LeftFrontFoot.mirror = true;
        this.setRotationAngle(this.LeftFrontFoot, 0.0f, 0.0698132f, 0.0f);
        this.Chin = new ModelRenderer(this, 46, 18);
        this.Chin.addBox(-2.0f, -1.3f, -4.04f, 4, 3, 2);
        this.Chin.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.Chin.setTextureSize(64, 32);
        this.Chin.mirror = true;
        this.setRotationAngle(this.Chin, -0.1115358f, 0.0f, 0.0f);
        this.LeftWhiskers = new ModelRenderer(this, 18, 14);
        this.LeftWhiskers.addBox(1.0f, -1.4f, -4.04f, 4, 3, 1);
        this.LeftWhiskers.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftWhiskers.setTextureSize(64, 32);
        this.LeftWhiskers.mirror = true;
        this.setRotationAngle(this.LeftWhiskers, -0.0872665f, -0.1745329f, 0.0f);
        this.chinHead = new ModelRenderer(this, 28, 21);
        this.chinHead.addBox(-2.5f, -3.0f, -2.4f, 5, 5, 4);
        this.chinHead.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.chinHead.setTextureSize(64, 32);
        this.chinHead.mirror = true;
        this.setRotationAngle(this.chinHead, 0.0f, 0.0f, 0.0f);
        this.LeftEye = new ModelRenderer(this, 0, 0);
        this.LeftEye.addBox(-2.0f, -1.8f, -3.4f, 2, 2, 1);
        this.LeftEye.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.LeftEye.setTextureSize(64, 32);
        this.LeftEye.mirror = true;
        this.setRotationAngle(this.LeftEye, 0.0f, -1.047198f, 0.0f);
        this.RightEye = new ModelRenderer(this, 0, 3);
        this.RightEye.addBox(0.0f, -1.8f, -3.4f, 2, 2, 1);
        this.RightEye.setRotationPoint(0.0f, 18.0f, -3.0f);
        this.RightEye.setTextureSize(64, 32);
        this.RightEye.mirror = true;
        this.setRotationAngle(this.RightEye, 0.0f, 1.047198f, 0.0f);
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.rabbitBone = new ModelRenderer(this);
        this.rabbitBone.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.rabbitBone.cubeList.add(new ModelBox(this.rabbitBone, 28, 45, -5.0f, -13.0f, -5.0f, 10, 11, 8, 0.0f, false));
        this.rabbitRleg = new ModelRenderer(this);
        this.rabbitRleg.setRotationPoint(-3.0f, -2.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitRleg);
        this.rabbitRleg.cubeList.add(new ModelBox(this.rabbitRleg, 0, 0, -2.0f, 0.0f, -2.0f, 4, 2, 4, 0.0f, false));
        this.rabbitLarm = new ModelRenderer(this);
        this.rabbitLarm.setRotationPoint(5.0f, -13.0f, -1.0f);
        this.setRotationAngle(this.rabbitLarm, 0.0f, 0.0f, -0.0873f);
        this.rabbitBone.addChild(this.rabbitLarm);
        this.rabbitLarm.cubeList.add(new ModelBox(this.rabbitLarm, 0, 0, 0.0f, 0.0f, -2.0f, 2, 8, 4, 0.0f, false));
        this.rabbitRarm = new ModelRenderer(this);
        this.rabbitRarm.setRotationPoint(-5.0f, -13.0f, -1.0f);
        this.setRotationAngle(this.rabbitRarm, 0.0f, 0.0f, 0.0873f);
        this.rabbitBone.addChild(this.rabbitRarm);
        this.rabbitRarm.cubeList.add(new ModelBox(this.rabbitRarm, 0, 0, -2.0f, 0.0f, -2.0f, 2, 8, 4, 0.0f, false));
        this.rabbitLleg = new ModelRenderer(this);
        this.rabbitLleg.setRotationPoint(3.0f, -2.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitLleg);
        this.rabbitLleg.cubeList.add(new ModelBox(this.rabbitLleg, 0, 0, -2.0f, 0.0f, -2.0f, 4, 2, 4, 0.0f, false));
        this.rabbitHead = new ModelRenderer(this);
        this.rabbitHead.setRotationPoint(0.0f, -14.0f, -1.0f);
        this.rabbitBone.addChild(this.rabbitHead);
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 0, 0, -3.0f, 0.0f, -4.0f, 6, 1, 6, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 56, 0, -5.0f, -9.0f, -5.0f, 2, 3, 2, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 56, 0, 3.0f, -9.0f, -5.0f, 2, 3, 2, 0.0f, true));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 0, 45, -4.0f, -11.0f, -4.0f, 8, 11, 8, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 46, 0, 1.0f, -20.0f, 0.0f, 3, 9, 1, 0.0f, false));
        this.rabbitHead.cubeList.add(new ModelBox(this.rabbitHead, 46, 0, -4.0f, -20.0f, 0.0f, 3, 9, 1, 0.0f, false));
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.bb_main = new ModelRenderer(this);
        this.bb_main.setRotationPoint(0.0f, 24.0f, 0.0f);
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -17.0f, -2.0f, 5, 7, 5, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 22, -3.0f, -16.0f, -3.0f, 5, 5, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -16.0f, 3.0f, 5, 5, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 0.0f, -15.0f, 3.0f, 1, 1, 3, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -14.0f, 4.0f, 1, 1, 2, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -1.0f, -11.0f, 3.0f, 1, 1, 2, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 0.0f, -14.0f, 6.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -3.0f, -13.0f, 6.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -1.0f, -12.0f, 5.0f, 1, 1, 1, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, -4.0f, -16.0f, -2.0f, 1, 5, 5, 0.0f, false));
        this.bb_main.cubeList.add(new ModelBox(this.bb_main, 0, 0, 2.0f, -16.0f, -2.0f, 1, 5, 5, 0.0f, false));
        this.Rleg = new ModelRenderer(this);
        this.Rleg.setRotationPoint(-3.0f, 14.0f, 0.5f);
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 53, 54, -1.5f, 7.0f, -1.0f, 2, 1, 2, 0.0f, false));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 0, 0, -1.0f, -1.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 52, 58, -1.5f, 8.0f, -3.0f, 2, 2, 4, 0.0f, true));
        this.Rleg.cubeList.add(new ModelBox(this.Rleg, 52, 58, -2.0f, 9.0f, -2.0f, 0, 1, 1, 0.0f, false));
        this.Lleg = new ModelRenderer(this);
        this.Lleg.setRotationPoint(2.0f, 14.0f, 0.5f);
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 53, 54, -0.5f, 7.0f, -1.0f, 2, 1, 2, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 0, 0, 0.0f, -1.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 52, 58, -0.5f, 8.0f, -3.0f, 2, 2, 4, 0.0f, false));
        this.Lleg.cubeList.add(new ModelBox(this.Lleg, 52, 58, 1.5f, 9.0f, -2.0f, 0, 1, 1, 0.0f, false));
        this.Larm = new ModelRenderer(this);
        this.Larm.setRotationPoint(3.0f, 9.0f, 0.5f);
        this.setRotationAngle(this.Larm, 0.0f, 0.0f, -0.0873f);
        this.Larm.cubeList.add(new ModelBox(this.Larm, 0, 60, -0.5f, 8.0f, -1.0f, 2, 2, 2, 0.0f, false));
        this.Larm.cubeList.add(new ModelBox(this.Larm, 60, 17, 0.0f, 0.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Rarm = new ModelRenderer(this);
        this.Rarm.setRotationPoint(-4.0f, 9.0f, 0.5f);
        this.setRotationAngle(this.Rarm, 0.0f, 0.0f, 0.0873f);
        this.Rarm.cubeList.add(new ModelBox(this.Rarm, 60, 17, -1.0f, 0.0f, -0.5f, 1, 8, 1, 0.0f, false));
        this.Rarm.cubeList.add(new ModelBox(this.Rarm, 0, 60, -1.5f, 8.0f, -1.0f, 2, 2, 2, 0.0f, false));
        this.sonicHead = new ModelRenderer(this);
        this.sonicHead.setRotationPoint(-0.5f, 7.0f, 0.0f);
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 36, 3, -3.5f, -7.0f, -3.0f, 7, 7, 7, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 60, 0, -0.5f, -3.0f, -4.0f, 1, 1, 1, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -3.5f, -4.0f, 6.0f, 3, 3, 3, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -3.5f, -5.0f, 4.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, 0.5f, -6.0f, 6.0f, 3, 3, 3, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, 0.5f, -7.0f, 4.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -2.5f, -9.0f, 3.0f, 3, 3, 2, 0.0f, false));
        this.sonicHead.cubeList.add(new ModelBox(this.sonicHead, 0, 0, -2.5f, -10.0f, 5.0f, 3, 3, 3, 0.0f, false));
        this.textureWidth = 128;
        this.textureHeight = 64;
        this.Agarrador_2 = new ModelRenderer(this, 29, 10);
        this.Agarrador_2.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Agarrador_2.setRotationPoint(-1.0f, 4.0f, -10.0f);
        this.Agarrador_2.setTextureSize(64, 32);
        this.Agarrador_2.mirror = true;
        this.setRotationAngle(this.Agarrador_2, 0.0f, 0.0f, 0.0f);
        this.Agarrador_3 = new ModelRenderer(this, 29, 10);
        this.Agarrador_3.addBox(0.0f, 0.0f, 0.0f, 2, 2, 3);
        this.Agarrador_3.setRotationPoint(-1.0f, 6.0f, -10.0f);
        this.Agarrador_3.setTextureSize(64, 32);
        this.Agarrador_3.mirror = true;
        this.setRotationAngle(this.Agarrador_3, 0.0f, 0.0f, 0.0f);
        this.Cuerpo = new ModelRenderer(this, 43, 40);
        this.Cuerpo.addBox(0.0f, 0.0f, 0.0f, 4, 4, 3);
        this.Cuerpo.setRotationPoint(-2.0f, 8.0f, -5.0f);
        this.Cuerpo.setTextureSize(64, 32);
        this.Cuerpo.mirror = true;
        this.setRotationAngle(this.Cuerpo, 0.0f, 0.0f, 0.0f);
        this.Pie_3 = new ModelRenderer(this, 0, 0);
        this.Pie_3.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Pie_3.setRotationPoint(0.0f, 21.0f, -4.0f);
        this.Pie_3.setTextureSize(64, 32);
        this.Pie_3.mirror = true;
        this.setRotationAngle(this.Pie_3, 0.0f, 0.1047198f, 0.0f);
        this.Agarrador_1 = new ModelRenderer(this, 29, 10);
        this.Agarrador_1.addBox(0.0f, 0.0f, 0.0f, 2, 2, 3);
        this.Agarrador_1.setRotationPoint(-1.0f, 2.0f, -10.0f);
        this.Agarrador_1.setTextureSize(64, 32);
        this.Agarrador_1.mirror = true;
        this.setRotationAngle(this.Agarrador_1, 0.0f, 0.0f, 0.0f);
        this.Pantalon_1 = new ModelRenderer(this, 1, 27);
        this.Pantalon_1.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pantalon_1.setRotationPoint(0.8f, 15.0f, -4.0f);
        this.Pantalon_1.setTextureSize(64, 32);
        this.Pantalon_1.mirror = true;
        this.setRotationAngle(this.Pantalon_1, 0.0f, 0.0698132f, 0.0f);
        this.Cabeza = new ModelRenderer(this, 11, 20);
        this.Cabeza.addBox(0.0f, 0.0f, 0.0f, 8, 7, 8);
        this.Cabeza.setRotationPoint(-4.0f, 1.0f, -7.0f);
        this.Cabeza.setTextureSize(64, 32);
        this.Cabeza.mirror = true;
        this.setRotationAngle(this.Cabeza, 0.0f, 0.0f, 0.0f);
        this.Pierna_2 = new ModelRenderer(this, 30, 0);
        this.Pierna_2.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Pierna_2.setRotationPoint(-2.3f, 17.0f, -3.3f);
        this.Pierna_2.setTextureSize(64, 32);
        this.Pierna_2.mirror = true;
        this.setRotationAngle(this.Pierna_2, 0.0f, 0.0f, 0.0f);
        this.Pitillo_1 = new ModelRenderer(this, 46, 0);
        this.Pitillo_1.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pitillo_1.setRotationPoint(0.0f, -1.0f, -6.0f);
        this.Pitillo_1.setTextureSize(64, 32);
        this.Pitillo_1.mirror = true;
        this.setRotationAngle(this.Pitillo_1, 0.0f, 0.0f, 0.0f);
        this.Pierna_1 = new ModelRenderer(this, 30, 0);
        this.Pierna_1.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Pierna_1.setRotationPoint(1.3f, 17.0f, -3.3f);
        this.Pierna_1.setTextureSize(64, 32);
        this.Pierna_1.mirror = true;
        this.setRotationAngle(this.Pierna_1, 0.0f, 0.0f, 0.0f);
        this.Pitillo_2 = new ModelRenderer(this, 54, 0);
        this.Pitillo_2.addBox(0.0f, 0.0f, 0.0f, 2, 4, 2);
        this.Pitillo_2.setRotationPoint(0.0f, -1.0f, -8.0f);
        this.Pitillo_2.setTextureSize(64, 32);
        this.Pitillo_2.mirror = true;
        this.setRotationAngle(this.Pitillo_2, 1.53589f, 0.0f, 0.0f);
        this.Pie_1 = new ModelRenderer(this, 0, 0);
        this.Pie_1.addBox(0.0f, 0.0f, 0.0f, 3, 2, 6);
        this.Pie_1.setRotationPoint(0.0f, 22.0f, -4.0f);
        this.Pie_1.setTextureSize(64, 32);
        this.Pie_1.mirror = true;
        this.setRotationAngle(this.Pie_1, 0.0f, 0.1047198f, 0.0f);
        this.Pie_4 = new ModelRenderer(this, 0, 0);
        this.Pie_4.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Pie_4.setRotationPoint(-3.0f, 21.0f, -4.0f);
        this.Pie_4.setTextureSize(64, 32);
        this.Pie_4.mirror = true;
        this.setRotationAngle(this.Pie_4, 0.0f, -0.1047198f, 0.0f);
        this.Brazo_1 = new ModelRenderer(this, 23, 0);
        this.Brazo_1.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_1.setRotationPoint(1.8f, 8.0f, -4.0f);
        this.Brazo_1.setTextureSize(64, 32);
        this.Brazo_1.mirror = true;
        this.setRotationAngle(this.Brazo_1, 0.0f, 0.0f, -0.7853982f);
        this.Pie_2 = new ModelRenderer(this, 0, 0);
        this.Pie_2.addBox(0.0f, 0.0f, 0.0f, 3, 2, 6);
        this.Pie_2.setRotationPoint(-3.0f, 22.0f, -4.0f);
        this.Pie_2.setTextureSize(64, 32);
        this.Pie_2.mirror = true;
        this.setRotationAngle(this.Pie_2, 0.0f, -0.1047198f, 0.0f);
        this.Pantalon_2 = new ModelRenderer(this, 0, 13);
        this.Pantalon_2.addBox(0.0f, 0.0f, 0.0f, 2, 2, 2);
        this.Pantalon_2.setRotationPoint(-2.8f, 15.0f, -4.0f);
        this.Pantalon_2.setTextureSize(64, 32);
        this.Pantalon_2.mirror = true;
        this.setRotationAngle(this.Pantalon_2, 0.0f, 0.0f, 0.0f);
        this.Pantalon_3 = new ModelRenderer(this, 0, 10);
        this.Pantalon_3.addBox(0.0f, 0.0f, 0.0f, 6, 3, 4);
        this.Pantalon_3.setRotationPoint(-3.0f, 12.0f, -5.0f);
        this.Pantalon_3.setTextureSize(64, 32);
        this.Pantalon_3.mirror = true;
        this.setRotationAngle(this.Pantalon_3, 0.0f, 0.0f, 0.0f);
        this.Brazo_2 = new ModelRenderer(this, 23, 0);
        this.Brazo_2.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_2.setRotationPoint(4.0f, 10.0f, -4.0f);
        this.Brazo_2.setTextureSize(64, 32);
        this.Brazo_2.mirror = true;
        this.setRotationAngle(this.Brazo_2, 0.0f, 0.0f, -0.0174533f);
        this.Brazo_3 = new ModelRenderer(this, 23, 0);
        this.Brazo_3.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_3.setRotationPoint(-2.0f, 8.0f, -4.0f);
        this.Brazo_3.setTextureSize(64, 32);
        this.Brazo_3.mirror = true;
        this.setRotationAngle(this.Brazo_3, 0.0f, 0.0f, 0.9773844f);
        this.Brazo_4 = new ModelRenderer(this, 23, 0);
        this.Brazo_4.addBox(0.0f, 0.0f, 0.0f, 1, 4, 1);
        this.Brazo_4.setRotationPoint(-5.0f, 10.0f, -4.0f);
        this.Brazo_4.setTextureSize(64, 32);
        this.Brazo_4.mirror = true;
        this.setRotationAngle(this.Brazo_4, 0.0f, 0.0f, 0.0698132f);
        this.Guante_1 = new ModelRenderer(this, 71, 0);
        this.Guante_1.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Guante_1.setRotationPoint(3.2f, 14.0f, -5.0f);
        this.Guante_1.setTextureSize(64, 32);
        this.Guante_1.mirror = true;
        this.setRotationAngle(this.Guante_1, 0.0f, 0.0f, 0.0f);
        this.Guante_2 = new ModelRenderer(this, 71, 0);
        this.Guante_2.addBox(0.0f, 0.0f, 0.0f, 3, 1, 3);
        this.Guante_2.setRotationPoint(-6.4f, 14.0f, -5.0f);
        this.Guante_2.setTextureSize(64, 32);
        this.Guante_2.mirror = true;
        this.setRotationAngle(this.Guante_2, 0.0f, 0.0f, 0.0f);
        this.Mano_1 = new ModelRenderer(this, 61, 27);
        this.Mano_1.addBox(0.0f, 0.0f, 0.0f, 3, 3, 2);
        this.Mano_1.setRotationPoint(2.866667f, 15.0f, -4.0f);
        this.Mano_1.setTextureSize(64, 32);
        this.Mano_1.mirror = true;
        this.setRotationAngle(this.Mano_1, 0.0f, 0.3839724f, 0.0f);
        this.Mano_2 = new ModelRenderer(this, 61, 33);
        this.Mano_2.addBox(0.0f, 0.0f, 0.0f, 3, 3, 2);
        this.Mano_2.setRotationPoint(-6.0f, 15.0f, -5.0f);
        this.Mano_2.setTextureSize(64, 32);
        this.Mano_2.mirror = true;
        this.setRotationAngle(this.Mano_2, 0.0f, -0.3839724f, 0.0f);
        this.textureWidth = 100;
        this.textureHeight = 80;
        this.footRight = new ModelRenderer(this, 22, 39);
        this.footRight.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.footRight.addBox(-2.5f, 0.0f, -6.0f, 5, 3, 8, 0.0f);
        this.setRotationAngle(this.footRight, (float)(-Math.PI) / 90, 0.0f, 0.0f);
        this.earRight = new ModelRenderer(this, 8, 0);
        this.earRight.setRotationPoint(-4.5f, -5.5f, 0.0f);
        this.earRight.addBox(-1.0f, -3.0f, -0.5f, 2, 3, 1, 0.0f);
        this.setRotationAngle(this.earRight, 0.05235988f, 0.0f, -1.0471976f);
        this.legLeftpad = new ModelRenderer(this, 48, 39);
        this.legLeftpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legLeftpad.addBox(-3.0f, 0.0f, -3.0f, 6, 9, 6, 0.0f);
        this.earRightpad_1 = new ModelRenderer(this, 40, 39);
        this.earRightpad_1.setRotationPoint(0.0f, -1.0f, 0.0f);
        this.earRightpad_1.addBox(-2.0f, -5.0f, -1.0f, 4, 4, 2, 0.0f);
        this.legLeft = new ModelRenderer(this, 54, 10);
        this.legLeft.setRotationPoint(3.3f, 12.5f, 0.0f);
        this.legLeft.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.armRightpad2 = new ModelRenderer(this, 0, 26);
        this.armRightpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armRightpad2.addBox(-2.5f, 0.0f, -2.5f, 5, 7, 5, 0.0f);
        this.handLeft = new ModelRenderer(this, 58, 56);
        this.handLeft.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.handLeft.addBox(-2.0f, 0.0f, -2.5f, 4, 4, 5, 0.0f);
        this.setRotationAngle(this.handLeft, 0.0f, 0.0f, 0.05235988f);
        this.armLeft = new ModelRenderer(this, 62, 10);
        this.armLeft.setRotationPoint(6.5f, -8.0f, 0.0f);
        this.armLeft.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.setRotationAngle(this.armLeft, 0.0f, 0.0f, -0.2617994f);
        this.legRight = new ModelRenderer(this, 90, 8);
        this.legRight.setRotationPoint(-3.3f, 12.5f, 0.0f);
        this.legRight.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.armLeft2 = new ModelRenderer(this, 90, 48);
        this.armLeft2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.armLeft2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.armLeft2, -0.17453292f, 0.0f, 0.0f);
        this.legRight2 = new ModelRenderer(this, 20, 35);
        this.legRight2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.legRight2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.legRight2, (float)Math.PI / 90, 0.0f, 0.0f);
        this.armLeftpad2 = new ModelRenderer(this, 0, 58);
        this.armLeftpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armLeftpad2.addBox(-2.5f, 0.0f, -2.5f, 5, 7, 5, 0.0f);
        this.legLeft2 = new ModelRenderer(this, 72, 48);
        this.legLeft2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.legLeft2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.legLeft2, (float)Math.PI / 90, 0.0f, 0.0f);
        this.hat = new ModelRenderer(this, 70, 24);
        this.hat.setRotationPoint(0.0f, -8.4f, 0.0f);
        this.hat.addBox(-3.0f, -0.5f, -3.0f, 6, 1, 6, 0.0f);
        this.setRotationAngle(this.hat, (float)(-Math.PI) / 180, 0.0f, 0.0f);
        this.earRightpad = new ModelRenderer(this, 85, 0);
        this.earRightpad.setRotationPoint(0.0f, -1.0f, 0.0f);
        this.earRightpad.addBox(-2.0f, -5.0f, -1.0f, 4, 4, 2, 0.0f);
        this.crotch = new ModelRenderer(this, 56, 0);
        this.crotch.setRotationPoint(0.0f, 9.5f, 0.0f);
        this.crotch.addBox(-5.5f, 0.0f, -3.5f, 11, 3, 7, 0.0f);
        this.torso = new ModelRenderer(this, 8, 0);
        this.torso.setRotationPoint(0.0f, 0.0f, 0.0f);
        this.torso.addBox(-6.0f, -9.0f, -4.0f, 12, 18, 8, 0.0f);
        this.setRotationAngle(this.torso, (float)Math.PI / 180, 0.0f, 0.0f);
        this.armRight2 = new ModelRenderer(this, 90, 20);
        this.armRight2.setRotationPoint(0.0f, 9.6f, 0.0f);
        this.armRight2.addBox(-1.0f, 0.0f, -1.0f, 2, 8, 2, 0.0f);
        this.setRotationAngle(this.armRight2, -0.17453292f, 0.0f, 0.0f);
        this.handRight = new ModelRenderer(this, 20, 26);
        this.handRight.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.handRight.addBox(-2.0f, 0.0f, -2.5f, 4, 4, 5, 0.0f);
        this.setRotationAngle(this.handRight, 0.0f, 0.0f, -0.05235988f);
        this.fredbody = new ModelRenderer(this, 0, 0);
        this.fredbody.setRotationPoint(0.0f, -9.0f, 0.0f);
        this.fredbody.addBox(-1.0f, -14.0f, -1.0f, 2, 24, 2, 0.0f);
        this.fredhead = new ModelRenderer(this, 39, 22);
        this.fredhead.setRotationPoint(0.0f, -13.0f, -0.5f);
        this.fredhead.addBox(-5.5f, -8.0f, -4.5f, 11, 8, 9, 0.0f);
        this.legRightpad = new ModelRenderer(this, 73, 33);
        this.legRightpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legRightpad.addBox(-3.0f, 0.0f, -3.0f, 6, 9, 6, 0.0f);
        this.frednose = new ModelRenderer(this, 17, 67);
        this.frednose.setRotationPoint(0.0f, -2.0f, -4.5f);
        this.frednose.addBox(-4.0f, -2.0f, -3.0f, 8, 4, 3, 0.0f);
        this.legLeftpad2 = new ModelRenderer(this, 16, 50);
        this.legLeftpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legLeftpad2.addBox(-2.5f, 0.0f, -3.0f, 5, 7, 6, 0.0f);
        this.armRightpad = new ModelRenderer(this, 70, 10);
        this.armRightpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armRightpad.addBox(-2.5f, 0.0f, -2.5f, 5, 9, 5, 0.0f);
        this.armLeftpad = new ModelRenderer(this, 38, 54);
        this.armLeftpad.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.armLeftpad.addBox(-2.5f, 0.0f, -2.5f, 5, 9, 5, 0.0f);
        this.hat2 = new ModelRenderer(this, 78, 61);
        this.hat2.setRotationPoint(0.0f, 0.1f, 0.0f);
        this.hat2.addBox(-2.0f, -4.0f, -2.0f, 4, 4, 4, 0.0f);
        this.setRotationAngle(this.hat2, (float)(-Math.PI) / 180, 0.0f, 0.0f);
        this.legRightpad2 = new ModelRenderer(this, 0, 39);
        this.legRightpad2.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.legRightpad2.addBox(-2.5f, 0.0f, -3.0f, 5, 7, 6, 0.0f);
        this.jaw = new ModelRenderer(this, 49, 65);
        this.jaw.setRotationPoint(0.0f, 0.5f, 0.0f);
        this.jaw.addBox(-5.0f, 0.0f, -4.5f, 10, 3, 9, 0.0f);
        this.setRotationAngle(this.jaw, 0.08726646f, 0.0f, 0.0f);
        this.armRight = new ModelRenderer(this, 48, 0);
        this.armRight.setRotationPoint(-6.5f, -8.0f, 0.0f);
        this.armRight.addBox(-1.0f, 0.0f, -1.0f, 2, 10, 2, 0.0f);
        this.setRotationAngle(this.armRight, 0.0f, 0.0f, 0.2617994f);
        this.footLeft = new ModelRenderer(this, 72, 50);
        this.footLeft.setRotationPoint(0.0f, 8.0f, 0.0f);
        this.footLeft.addBox(-2.5f, 0.0f, -6.0f, 5, 3, 8, 0.0f);
        this.setRotationAngle(this.footLeft, (float)(-Math.PI) / 90, 0.0f, 0.0f);
        this.earLeft = new ModelRenderer(this, 40, 0);
        this.earLeft.setRotationPoint(4.5f, -5.5f, 0.0f);
        this.earLeft.addBox(-1.0f, -3.0f, -0.5f, 2, 3, 1, 0.0f);
        this.setRotationAngle(this.earLeft, 0.05235988f, 0.0f, 1.0471976f);
        this.legRight2.addChild(this.footRight);
        this.fredhead.addChild(this.earRight);
        this.legLeft.addChild(this.legLeftpad);
        this.earLeft.addChild(this.earRightpad_1);
        this.fredbody.addChild(this.legLeft);
        this.armRight2.addChild(this.armRightpad2);
        this.armLeft2.addChild(this.handLeft);
        this.fredbody.addChild(this.armLeft);
        this.fredbody.addChild(this.legRight);
        this.armLeft.addChild(this.armLeft2);
        this.legRight.addChild(this.legRight2);
        this.armLeft2.addChild(this.armLeftpad2);
        this.legLeft.addChild(this.legLeft2);
        this.fredhead.addChild(this.hat);
        this.earRight.addChild(this.earRightpad);
        this.fredbody.addChild(this.crotch);
        this.fredbody.addChild(this.torso);
        this.armRight.addChild(this.armRight2);
        this.armRight2.addChild(this.handRight);
        this.fredbody.addChild(this.fredhead);
        this.legRight.addChild(this.legRightpad);
        this.fredhead.addChild(this.frednose);
        this.legLeft2.addChild(this.legLeftpad2);
        this.armRight.addChild(this.armRightpad);
        this.armLeft.addChild(this.armLeftpad);
        this.hat.addChild(this.hat2);
        this.legRight2.addChild(this.legRightpad2);
        this.fredhead.addChild(this.jaw);
        this.fredbody.addChild(this.armRight);
        this.legLeft2.addChild(this.footLeft);
        this.fredhead.addChild(this.earLeft);
    }

    @Override
    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale) {
        GlStateManager.pushMatrix();
        if ((!CustomModel.onlyMe.getCurrentValue() || entityIn == Minecraft.getMinecraft().player || Celestial.instance.friendManager.isFriend(entityIn.getName()) && CustomModel.friends.getCurrentValue()) && !CustomModel.modelMode.currentMode.equals("None") && Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState()) {
            if (CustomModel.modelMode.currentMode.equals("Amogus")) {
                boolean flag = entityIn instanceof EntityLivingBase && ((EntityLivingBase)entityIn).getTicksElytraFlying() > 4;
                this.bipedHead.rotateAngleY = netHeadYaw * ((float)Math.PI / 180);
                this.bipedHead.rotateAngleX = flag ? -0.7853982f : headPitch * ((float)Math.PI / 180);
                this.bipedBody.rotateAngleY = 0.0f;
                this.bipedRightArm.rotationPointZ = 0.0f;
                this.bipedRightArm.rotationPointX = -5.0f;
                this.bipedLeftArm.rotationPointZ = 0.0f;
                this.bipedLeftArm.rotationPointX = 5.0f;
                float f = 1.0f;
                if (flag) {
                    f = (float)(entityIn.motionX * entityIn.motionX + entityIn.motionY * entityIn.motionY + entityIn.motionZ * entityIn.motionZ);
                    f /= 0.2f;
                    f = f * f * f;
                }
                if (f < 1.0f) {
                    f = 1.0f;
                }
                this.bipedRightArm.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 2.0f * limbSwingAmount * 0.5f / f;
                this.bipedLeftArm.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 2.0f * limbSwingAmount * 0.5f / f;
                this.bipedRightArm.rotateAngleZ = 0.0f;
                this.bipedLeftArm.rotateAngleZ = 0.0f;
                this.right_leg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount / f;
                this.left_leg.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 1.4f * limbSwingAmount / f;
                this.right_leg.rotateAngleY = 0.0f;
                this.left_leg.rotateAngleY = 0.0f;
                this.right_leg.rotateAngleZ = 0.0f;
                this.left_leg.rotateAngleZ = 0.0f;
                int bodyCustomColor = CustomModel.bodyCustomColor.getColor();
                int bodyColor = 0;
                switch (CustomModel.bodyColor.currentMode) {
                    case "Client": {
                        bodyColor = ClientHelper.getClientColor().getRGB();
                        break;
                    }
                    case "Custom": {
                        bodyColor = bodyCustomColor;
                        break;
                    }
                    case "Astolfo": {
                        bodyColor = PaletteHelper.astolfo(5000.0f, 1).getRGB();
                        break;
                    }
                    case "Rainbow": {
                        bodyColor = PaletteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                    }
                }
                int eyeCustomColor = CustomModel.eyeCustomColor.getColor();
                int eyeColor = 0;
                switch (CustomModel.eyeColor.currentMode) {
                    case "Client": {
                        eyeColor = ClientHelper.getClientColor().getRGB();
                        break;
                    }
                    case "Custom": {
                        eyeColor = eyeCustomColor;
                        break;
                    }
                    case "Astolfo": {
                        eyeColor = PaletteHelper.astolfo(5000.0f, 1).getRGB();
                        break;
                    }
                    case "Rainbow": {
                        eyeColor = PaletteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                    }
                }
                int legsCustomColor = CustomModel.legsCustomColor.getColor();
                int legsColor = 0;
                switch (CustomModel.legsColor.currentMode) {
                    case "Client": {
                        legsColor = ClientHelper.getClientColor().getRGB();
                        break;
                    }
                    case "Custom": {
                        legsColor = legsCustomColor;
                        break;
                    }
                    case "Astolfo": {
                        legsColor = PaletteHelper.astolfo(5000.0f, 1).getRGB();
                        break;
                    }
                    case "Rainbow": {
                        legsColor = PaletteHelper.rainbow2(30, 1.0f, 1.0f).getRGB();
                    }
                }
                if (CustomModel.friendHighlight.getCurrentValue() && Celestial.instance.friendManager.isFriend(entityIn.getName())) {
                    bodyColor = Color.GREEN.getRGB();
                    eyeColor = Color.WHITE.getRGB();
                    legsColor = Color.GREEN.getRGB();
                }
                if (this.isChild) {
                    GlStateManager.scale(0.5f, 0.5f, 0.5f);
                    GlStateManager.translate(0.0f, 24.0f * scale, 0.0f);
                    this.body.render(scale);
                    this.left_leg.render(scale);
                    this.right_leg.render(scale);
                } else {
                    GlStateManager.translate(0.0, -0.8, 0.0);
                    GlStateManager.scale(1.8, 1.6, 1.6);
                    RenderHelper.color(bodyColor);
                    GlStateManager.translate(0.0, 0.15, 0.0);
                    this.body.render(scale);
                    RenderHelper.color(eyeColor);
                    this.eye.render(scale);
                    RenderHelper.color(legsColor);
                    GlStateManager.translate(0.0, -0.15, 0.0);
                    this.left_leg.render(scale);
                    this.right_leg.render(scale);
                    GlStateManager.color(1.0f, 1.0f, 1.0f, 1.0f);
                }
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Jeff Killer")) {
                this.Head.rotateAngleX = this.bipedHead.rotateAngleX;
                this.Head.rotateAngleY = this.bipedHead.rotateAngleY;
                this.Head.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.LeftArm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                this.LeftArm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                this.LeftArm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                this.RightLeg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                this.RightLeg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                this.RightLeg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                this.LeftLeg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                this.LeftLeg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                this.LeftLeg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                this.RightLeg.render(scale);
                this.LeftLeg.render(scale);
                this.Body.render(scale);
                this.RightArm.render(scale);
                this.Head.render(scale);
                this.LeftArm.render(scale);
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Crab")) {
                this.bone.render(scale);
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Crazy Rabbit")) {
                GlStateManager.pushMatrix();
                GlStateManager.scale(1.25, 1.25, 1.25);
                GlStateManager.translate(0.0, -0.3, 0.0);
                this.rabbitHead.rotateAngleX = this.bipedHead.rotateAngleX;
                this.rabbitHead.rotateAngleY = this.bipedHead.rotateAngleY;
                this.rabbitHead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.rabbitLarm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                this.rabbitLarm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                this.rabbitLarm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                this.rabbitRarm.rotateAngleX = this.bipedRightArm.rotateAngleX;
                this.rabbitRarm.rotateAngleY = this.bipedRightArm.rotateAngleY;
                this.rabbitRarm.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                this.rabbitRleg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                this.rabbitRleg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                this.rabbitRleg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                this.rabbitLleg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                this.rabbitLleg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                this.rabbitLleg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                this.rabbitBone.render(scale);
                GlStateManager.popMatrix();
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Sonic")) {
                GlStateManager.pushMatrix();
                GlStateManager.scale(1.3, 1.3, 1.3);
                GlStateManager.translate(0.0, -0.35, 0.0);
                this.sonicHead.rotateAngleX = this.bipedHead.rotateAngleX;
                this.sonicHead.rotateAngleY = this.bipedHead.rotateAngleY;
                this.sonicHead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.Larm.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                this.Larm.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                this.Larm.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                this.Rarm.rotateAngleX = this.bipedRightArm.rotateAngleX;
                this.Rarm.rotateAngleY = this.bipedRightArm.rotateAngleY;
                this.Rarm.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                this.Rleg.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                this.Rleg.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                this.Rleg.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                this.Lleg.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                this.Lleg.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                this.Lleg.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                this.sonicHead.render(scale);
                this.bb_main.render(scale);
                this.Rleg.render(scale);
                this.Lleg.render(scale);
                this.Larm.render(scale);
                this.Rarm.render(scale);
                GlStateManager.popMatrix();
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("CupHead")) {
                GlStateManager.pushMatrix();
                GlStateManager.rotate(180.0f, 0.0f, -1.0f, 0.0f);
                GlStateManager.scale(1.4, 1.4, 1.4);
                GlStateManager.translate(0.0, -0.45, 0.0);
                this.Agarrador_2.render(scale);
                this.Agarrador_3.render(scale);
                this.Cuerpo.render(scale);
                this.Pie_2.render(scale);
                this.Pie_3.render(scale);
                this.Pie_1.render(scale);
                this.Pie_4.render(scale);
                this.Agarrador_1.render(scale);
                this.Pantalon_1.render(scale);
                this.Cabeza.render(scale);
                this.Pierna_2.render(scale);
                this.Pitillo_1.render(scale);
                this.Pierna_1.render(scale);
                this.Pitillo_2.render(scale);
                this.Brazo_1.render(scale);
                this.Pantalon_2.render(scale);
                this.Pantalon_3.render(scale);
                this.Brazo_2.render(scale);
                this.Brazo_3.render(scale);
                this.Brazo_4.render(scale);
                this.Guante_1.render(scale);
                this.Guante_2.render(scale);
                this.Mano_1.render(scale);
                this.Mano_2.render(scale);
                GlStateManager.popMatrix();
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Freddy Bear")) {
                this.fredhead.rotateAngleX = this.bipedHead.rotateAngleX;
                this.fredhead.rotateAngleY = this.bipedHead.rotateAngleY;
                this.fredhead.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.armLeft.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                this.armLeft.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                this.armLeft.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                this.legRight.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                this.legRight.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                this.legRight.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                this.legLeft.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                this.legLeft.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                this.legLeft.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                this.armRight.rotateAngleX = this.bipedRightArm.rotateAngleX;
                this.armRight.rotateAngleY = this.bipedRightArm.rotateAngleY;
                this.armRight.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                GlStateManager.pushMatrix();
                GlStateManager.scale(0.75, 0.65, 0.75);
                GlStateManager.translate(0.0, 0.85, 0.0);
                this.fredbody.render(scale);
                GlStateManager.popMatrix();
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Chinchilla")) {
                GlStateManager.pushMatrix();
                GlStateManager.scale(1.4, 1.4, 1.4);
                GlStateManager.translate(0.0, -0.45, 0.0);
                float f = limbSwing;
                float f1 = limbSwingAmount;
                this.Chin.rotateAngleY = this.chinHead.rotateAngleY = netHeadYaw / 57.295776f;
                this.Nose.rotateAngleY = this.chinHead.rotateAngleY;
                this.RightEar.rotateAngleY = this.chinHead.rotateAngleY + 2.094395f;
                this.LeftEar.rotateAngleY = this.chinHead.rotateAngleY + 1.047198f;
                this.LeftEye.rotateAngleY = this.chinHead.rotateAngleY - 1.047198f;
                this.RightEye.rotateAngleY = this.chinHead.rotateAngleY + 1.047198f;
                this.LeftFrontLeg.rotateAngleX = MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.3f * f1 - 0.1858931f;
                this.RightFrontLeg.rotateAngleX = MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.3f * f1 - 0.1858931f;
                this.LeftFrontFoot.rotateAngleX = MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.3f * f1;
                this.RightFrontFoot.rotateAngleX = MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.3f * f1;
                this.LeftRearFoot.rotateAngleX = -MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.1f * f1;
                this.RightRearFoot.rotateAngleX = -MathHelper.cos(f * 1.2f + (float)Math.PI) * 1.1f * f1;
                this.LowerTail.rotateAngleX = MathHelper.cos(f * 1.0f + (float)Math.PI) * 0.2f * f1 - 0.1047198f;
                this.UpperTail.rotateAngleX = MathHelper.cos(f * 1.0f + (float)Math.PI) * 0.2f * f1 + 0.7330383f;
                this.LeftWhiskers.rotateAngleY = this.chinHead.rotateAngleY - 0.1745329f;
                this.RightWhiskers.rotateAngleY = this.chinHead.rotateAngleY + 0.1745329f;
                this.Back.render(scale);
                this.Nose.render(scale);
                this.RightEar.render(scale);
                this.RightWhiskers.render(scale);
                this.LeftEar.render(scale);
                this.UpperTail.render(scale);
                this.chinBody.render(scale);
                this.LowerTail.render(scale);
                this.RightRearFoot.render(scale);
                this.LeftRearFoot.render(scale);
                this.RightFrontLeg.render(scale);
                this.RightFrontFoot.render(scale);
                this.LeftFrontLeg.render(scale);
                this.LeftFrontFoot.render(scale);
                this.Chin.render(scale);
                this.LeftWhiskers.render(scale);
                this.chinHead.render(scale);
                GlStateManager.popMatrix();
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Demon")) {
                this.head7.rotateAngleX = this.bipedHead.rotateAngleX;
                this.head7.rotateAngleY = this.bipedHead.rotateAngleY;
                this.head7.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.right_leg7.rotateAngleX = this.bipedRightLeg.rotateAngleX;
                this.right_leg7.rotateAngleY = this.bipedRightLeg.rotateAngleY;
                this.right_leg7.rotateAngleZ = this.bipedRightLeg.rotateAngleZ;
                this.left_leg7.rotateAngleX = this.bipedLeftLeg.rotateAngleX;
                this.left_leg7.rotateAngleY = this.bipedLeftLeg.rotateAngleY;
                this.left_leg7.rotateAngleZ = this.bipedLeftLeg.rotateAngleZ;
                this.left_arm7.rotateAngleX = this.bipedLeftArm.rotateAngleX;
                this.left_arm7.rotateAngleY = this.bipedLeftArm.rotateAngleY;
                this.left_arm7.rotateAngleZ = this.bipedLeftArm.rotateAngleZ;
                this.right_arm7.rotateAngleX = this.bipedRightArm.rotateAngleX;
                this.right_arm7.rotateAngleY = this.bipedRightArm.rotateAngleY;
                this.right_arm7.rotateAngleZ = this.bipedRightArm.rotateAngleZ;
                this.head7.render(scale);
                this.left_horn.render(scale);
                this.right_horn.render(scale);
                this.body7.render(scale);
                this.left_wing.render(scale);
                this.right_wing.render(scale);
                this.left_arm7.render(scale);
                this.right_arm7.render(scale);
                this.left_leg7.render(scale);
                this.right_leg7.render(scale);
            } else if (Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && CustomModel.modelMode.currentMode.equals("Red Panda")) {
                this.head.rotateAngleX = this.bipedHead.rotateAngleX;
                this.head.rotateAngleY = this.bipedHead.rotateAngleY;
                this.head.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.nose.rotateAngleX = this.bipedHead.rotateAngleX;
                this.nose.rotateAngleY = this.bipedHead.rotateAngleY;
                this.nose.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.ear1.rotateAngleX = this.bipedHead.rotateAngleX;
                this.ear1.rotateAngleY = this.bipedHead.rotateAngleY;
                this.ear1.rotateAngleZ = this.bipedHead.rotateAngleZ;
                this.ear2.rotateAngleX = this.bipedHead.rotateAngleX;
                this.ear2.rotateAngleY = this.bipedHead.rotateAngleY;
                this.ear2.rotateAngleZ = this.bipedHead.rotateAngleZ;
                if (entityIn.isSneaking()) {
                    this.bodyfront.rotateAngleX = -0.0872665f;
                    this.bodyback.setRotationPoint(-5.0f, 11.5f, 3.0f);
                    this.bodyback.rotateAngleX = -0.6108652f;
                    this.tail.setRotationPoint(0.0f, 19.0f, 8.0f);
                    this.tail.rotateAngleX = -0.0872665f;
                    this.leg1.rotateAngleX = 0.0f;
                    this.foot1.rotateAngleX = 0.0f;
                    this.leg2.rotateAngleX = 0.0f;
                    this.foot2.rotateAngleX = 0.0f;
                    this.leg3.setRotationPoint(1.5f, 22.0f, 9.0f);
                    this.foot3.setRotationPoint(1.5f, 16.0f, 3.0f);
                    this.leg4.setRotationPoint(-1.5f, 22.0f, 9.0f);
                    this.foot4.setRotationPoint(-1.5f, 16.0f, 3.0f);
                    this.leg3.rotateAngleX = -1.570796f;
                    this.foot3.rotateAngleX = 0.0f;
                    this.leg4.rotateAngleX = -1.570796f;
                    this.foot4.rotateAngleX = 0.0f;
                } else {
                    this.bodyfront.rotateAngleX = 0.0872665f;
                    this.bodyback.setRotationPoint(-5.0f, 10.0f, 3.0f);
                    this.bodyback.rotateAngleX = -0.0872665f;
                    this.tail.setRotationPoint(0.0f, 14.0f, 11.0f);
                    this.leg3.setRotationPoint(1.5f, 16.0f, 9.0f);
                    this.foot3.setRotationPoint(1.5f, 16.0f, 9.0f);
                    this.leg4.setRotationPoint(-1.5f, 16.0f, 9.0f);
                    this.foot4.setRotationPoint(-1.5f, 16.0f, 9.0f);
                    this.leg1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
                    this.foot1.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
                    this.leg2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 1.4f * limbSwingAmount;
                    this.foot2.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 1.4f * limbSwingAmount;
                    this.leg3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
                    this.foot3.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f) * 1.4f * limbSwingAmount;
                    this.leg4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 1.4f * limbSwingAmount;
                    this.foot4.rotateAngleX = MathHelper.cos(limbSwing * 0.6662f + (float)Math.PI) * 1.4f * limbSwingAmount;
                }
                this.head.render(scale);
                this.nose.render(scale);
                this.ear1.render(scale);
                this.ear2.render(scale);
                this.bodyfront.render(scale);
                this.bodyback.render(scale);
                this.leg1.render(scale);
                this.foot1.render(scale);
                this.leg2.render(scale);
                this.foot2.render(scale);
                this.leg3.render(scale);
                this.foot3.render(scale);
                this.leg4.render(scale);
                this.foot4.render(scale);
                this.tail.render(scale);
            }
        } else {
            super.render(entityIn, limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scale);
            if (this.isChild) {
                float f = 2.0f;
                GlStateManager.scale(0.5f, 0.5f, 0.5f);
                GlStateManager.translate(0.0f, 24.0f * scale, 0.0f);
                this.bipedLeftLegwear.render(scale);
                this.bipedRightLegwear.render(scale);
                this.bipedLeftArmwear.render(scale);
                this.bipedRightArmwear.render(scale);
                this.bipedBodyWear.render(scale);
            } else {
                if (entityIn.isSneaking()) {
                    GlStateManager.translate(0.0f, 0.2f, 0.0f);
                }
                this.bipedLeftLegwear.render(scale);
                this.bipedRightLegwear.render(scale);
                this.bipedLeftArmwear.render(scale);
                this.bipedRightArmwear.render(scale);
                this.bipedBodyWear.render(scale);
            }
        }
        GlStateManager.popMatrix();
    }

    public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
    }

    public void renderDeadmau5Head(float scale) {
        ModelPlayer.copyModelAngles(this.bipedHead, this.bipedDeadmau5Head);
        this.bipedDeadmau5Head.rotationPointX = 0.0f;
        this.bipedDeadmau5Head.rotationPointY = 0.0f;
        this.bipedDeadmau5Head.render(scale);
    }

    public void renderCape(float scale) {
        if (!(Celestial.instance.featureManager.getFeatureByClass(CustomModel.class).getState() && (CustomModel.modelMode.currentMode.equals("Werewolf") || CustomModel.modelMode.currentMode.equals("Crazy Rabbit") || CustomModel.modelMode.currentMode.equals("Sonic") || CustomModel.modelMode.currentMode.equals("CupHead") || CustomModel.modelMode.currentMode.equals("Chinchilla") || CustomModel.modelMode.currentMode.equals("Freddy Bear") || CustomModel.modelMode.currentMode.equals("Amogus") || CustomModel.modelMode.currentMode.equals("Demon") || CustomModel.modelMode.currentMode.equals("Red Panda") || CustomModel.modelMode.currentMode.equals("Crab") || CustomModel.modelMode.currentMode.equals("Jeff Killer")))) {
            this.bipedCape.render(scale);
        }
    }

    @Override
    public void setRotationAngles(float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scaleFactor, Entity entityIn) {
        super.setRotationAngles(limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scaleFactor, entityIn);
        ModelPlayer.copyModelAngles(this.bipedLeftLeg, this.bipedLeftLegwear);
        ModelPlayer.copyModelAngles(this.bipedRightLeg, this.bipedRightLegwear);
        ModelPlayer.copyModelAngles(this.bipedLeftArm, this.bipedLeftArmwear);
        ModelPlayer.copyModelAngles(this.bipedRightArm, this.bipedRightArmwear);
        ModelPlayer.copyModelAngles(this.bipedBody, this.bipedBodyWear);
    }

    @Override
    public void setInvisible(boolean invisible) {
        super.setInvisible(invisible);
        this.bipedLeftArmwear.showModel = invisible;
        this.bipedRightArmwear.showModel = invisible;
        this.bipedLeftLegwear.showModel = invisible;
        this.bipedRightLegwear.showModel = invisible;
        this.bipedBodyWear.showModel = invisible;
        this.bipedCape.showModel = invisible;
        this.bipedDeadmau5Head.showModel = invisible;
    }

    @Override
    public void postRenderArm(float scale, EnumHandSide side) {
        ModelRenderer modelrenderer = this.getArmForSide(side);
        if (this.smallArms) {
            float f = 0.5f * (float)(side == EnumHandSide.RIGHT ? 1 : -1);
            modelrenderer.rotationPointX += f;
            modelrenderer.postRender(scale);
            modelrenderer.rotationPointX -= f;
        } else {
            modelrenderer.postRender(scale);
        }
    }

    protected float rotlerpRad(float p_205060_1_, float p_205060_2_, float p_205060_3_) {
        float f = (p_205060_2_ - p_205060_1_) % ((float)Math.PI * 2);
        if (f < (float)(-Math.PI)) {
            f += (float)Math.PI * 2;
        }
        if (f >= (float)Math.PI) {
            f -= (float)Math.PI * 2;
        }
        return p_205060_1_ + p_205060_3_ * f;
    }
}

